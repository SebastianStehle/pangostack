{
    "parameters": [
      {
        "name": "domain",
        "label": "Public Domain",
        "type": "string",
        "required": true,
        "display": true
      },
      {
        "name": "region",
        "label": "Region",
        "type": "string",
        "required": true,
        "display": true,
        "allowedValues": [
          {
            "value": "ams",
            "label": "Amsterdam"
          }
        ],
        "immutable": true
      },
      {
        "name": "squidexNodes",
        "label": "Number of Nodes",
        "type": "number",
        "required": true,
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 12,
        "section": "Squidex"
      },
      {
        "name": "squidexCoresPerNode",
        "label": "Cores per Node",
        "type": "number",
        "required": true,
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 4,
        "section": "Squidex"
      },
      {
        "name": "squidexMemoryPerNode",
        "label": "Memory (GB) per Node",
        "type": "number",
        "required": true,
        "defaultValue": 2,
        "minValue": 2,
        "maxValue": 3,
        "section": "Squidex"
      }, {
        "name": "mongoDbNodes",
        "label": "Number of Nodes",
        "type": "number",
        "required": true,
        "defaultValue": 3,
        "minValue": 3,
        "maxValue": 12,
        "section": "MongoDB"
      },
      {
        "name": "mongoDbCoresPerNode",
        "label": "Cores per Node",
        "type": "number",
        "required": true,
        "defaultValue": 1,
        "minValue": 1,
        "maxValue": 4,
        "section": "MongoDB"
      },
      {
        "name": "mongoDbMemoryPerNode",
        "label": "Memory (GB) per Node",
        "type": "number",
        "required": true,
        "defaultValue": 2,
        "minValue": 2,
        "maxValue": 3,
        "section": "MongoDB"
      },
      {
        "name": "mongoDbVolumePerNode",
        "label": "Storage (GB) per Node",
        "type": "number",
        "required": true,
        "defaultValue": 50,
        "minValue": 50,
        "maxValue": 2000,
        "step": 10,
        "immutable": true,
        "section": "MongoDB"
      },
      {
        "name": "googleClient",
        "label": "Google Client ID",
        "type": "string",
        "required": false,
        "section": "Authentication"
      },
      {
        "name": "googleSecret",
        "label": "Google Client Secret",
        "type": "string",
        "required": false,
        "section": "Authentication"
      },
      {
        "name": "microsoftClient",
        "label": "Microsoft Client ID",
        "type": "string",
        "required": false,
        "section": "Authentication"
      },
      {
        "name": "microsoftSecret",
        "label": "Microsoft Client Secret",
        "type": "string",
        "required": false,
        "section": "Authentication"
      },
      {
        "name": "githubClient",
        "label": "Github Client ID",
        "type": "string",
        "required": false,
        "section": "Authentication"
      },
      {
        "name": "githubSecret",
        "label": "Github Client Secret",
        "type": "string",
        "required": false,
        "section": "Authentication"
      },
      {
         "name":"environment",
         "label":"Environment",
         "type":"string",
         "editor":"textarea",
         "required":false,
         "section":"More",
         "hint":"Additional environment variables in the format key=value"
      }
    ],
    "afterInstallationInstructions": "Create a new A record from your domain **${parameters.domain}** to the IP address of the service.",
    "pricingModel": "pay_per_use",
    "resources": [
      {
        "name": "Storage",
        "id": "storage",
        "type": "vultr-storage",
        "parameters": {
          "apiKey": "${env.storageApiKey}",
          "tier": "tier_004k_1000m"
        },
        "mappings": {
          "cluster": {
            "value": "${parameters.region}",
            "map": {
              "ams": "2"
            }
          }
        }
      },
      {
        "name": "Squidex",
        "id": "squidex",
        "type": "docker-compose-ssh",
        "parameters": {
          "chartName": "squidex/squidex7",
          "chartVersion": "7.0",
          "deployment.replicaCount": "${parameters.squidexNodes}",
          "deployment.resources.limits.cpu": "${parameters.squidexCoresPerNode}",
          "deployment.resources.limits.memory": "${parameters.squidexMemoryPerNode}Gi",
          "deployment.resources.requests.cpu": "${parameters.squidexCoresPerNode}",
          "deployment.resources.requests.memory": "${parameters.squidexMemoryPerNode}Gi",
          "env.BASE__URL": "https://${parameters.domain}",
          "env.IDENTITY__GITHUBCLIENT": "${parameters.githubClient}",
          "env.IDENTITY__GITHUBSECRET": "${parameters.githubSecret}",
          "env.IDENTITY__GOOGLECLIENT": "${parameters.googleClient}",
          "env.IDENTITY__GOOGLESECRET": "${parameters.googleSecret}",
          "env.IDENTITY__MICROSOFTCLIENT": "${parameters.microsoftClient}",
          "env.IDENTITY__MICROSOFTSECRET": "${parameters.microsoftSecret}",
          "env.STORE__AMAZONS3__ACCESSKEY": "${context.storage.accessKey}",
          "env.STORE__AMAZONS3__HOST": "${context.storage.hostName}",
          "env.STORE__AMAZONS3__SECRET": "${context.storage.secretKey}",
          "env.STORE__TYPE": "AmazonS3",
          "environment": "${parameters.environment}",
          "ingress.annotations.cert-manager.io/cluster-issuer": "letsencrypt",
          "ingress.annotations.kubernetes.io/tls-acme": "true",
          "ingress.enabled": true,
          "ingress.hostName": "${parameters.domain}",
          "ingress.ingressClassName": "nginx",
          "mongodb.persistence.size": "${parameters.mongoDbVolumePerNode}Gi",
          "mongodb.replicaCount": "${parameters.mongoDbNodes}",
          "mongodb.resources.limits.cpu": "${parameters.mongoDbCoresPerNode}",
          "mongodb.resources.limits.memory": "${parameters.mongoDbMemoryPerNode}Gi",
          "mongodb.resources.requests.cpu": "${parameters.mongoDbCoresPerNode}",
          "mongodb.resources.requests.memory":"${parameters.mongoDbMemoryPerNode}Gi",
          "repositoryName": "squidex",
          "repositoryUrl": "https://squidex.github.io/squidex/helm/"
        },
        "healthChecks": [
          {
            "name": "Default",
            "url": "https://${parameters.domain}/healthz",
            "type": "http"
          }
        ],
        "mappings": {
          "cluster": {
            "value": "${parameters.region}",
            "map": {
              "ams": "${env.k8ConfigAMS}"
            }
          }
        }
      }
    ],
    "usage": {
      "totalCores": "${parameters.mongoDbNodes * parameters.mongoDbCoresPerNode + (parameters.squidexNodes + 1) * parameters.squidexCoresPerNode}",
      "totalMemoryGB": "${parameters.mongoDbNodes * parameters.mongoDbMemoryPerNode + (parameters.squidexNodes + 1) * parameters.squidexMemoryPerNode}",
      "totalVolumeGB": "${parameters.mongoDbNodes * parameters.mongoDbVolumePerNode}"
    }
  }