{
  "openapi": "3.0.0",
  "info": {
    "title": "Vultr API",
    "version": "2.0",
    "contact": {
      "email": "support@vultr.com",
      "name": "",
      "url": "https://www.vultr.com"
    },
    "description": "# Introduction\n\nThe Vultr API v2 is a set of HTTP endpoints that adhere to RESTful design principles and CRUD actions with predictable URIs. It uses standard HTTP response codes, authentication, and verbs. The API has consistent and well-formed JSON requests and responses with cursor-based pagination to simplify list handling. Error messages are descriptive and easy to understand. All functions of the Vultr customer portal are accessible via the API, enabling you to script complex unattended scenarios with any tool fluent in HTTP.\n\n## Requests\n\nCommunicate with the API by making an HTTP request at the correct endpoint. The chosen method determines the action taken.\n\n| Method | Usage |\n| ------ | ------------- |\n| DELETE | Use the DELETE method to destroy a resource in your account. If it is not found, the operation will return a 4xx error and an appropriate message. |\n| GET | To retrieve information about a resource, use the GET method. The data is returned as a JSON object. GET methods are read-only and do not affect any resources. |\n| PATCH | Some resources support partial modification with PATCH, which modifies specific attributes without updating the entire object representation. |\n| POST | Issue a POST method to create a new object. Include all needed attributes in the request body encoded as JSON. |\n| PUT | Use the PUT method to update information about a resource. PUT will set new values on the item without regard to their current values. |\n\n**Rate Limit:** Vultr safeguards the API against bursts of incoming traffic based on the request's IP address to ensure stability for all users. If your application sends more than 30 requests per second, the API may return HTTP status code 429.\n\n## Response Codes\n\nWe use standard HTTP response codes to show the success or failure of requests. Response codes in the 2xx range indicate success, while codes in the 4xx range indicate an error, such as an authorization failure or a malformed request. All 4xx errors will return a JSON response object with an `error` attribute explaining the error. Codes in the 5xx range indicate a server-side problem preventing Vultr from fulfilling your request.\n\n| Response | Description |\n| ------ | ------------- |\n| 200 OK | The response contains your requested information. |\n| 201 Created | Your request was accepted. The resource was created. |\n| 202 Accepted | Your request was accepted. The resource was created or updated. |\n| 204 No Content | Your request succeeded, there is no additional information returned. |\n| 400 Bad Request | Your request was malformed. |\n| 401 Unauthorized | You did not supply valid authentication credentials. |\n| 403 Forbidden | You are not allowed to perform that action. |\n| 404 Not Found | No results were found for your request. |\n| 429 Too Many Requests | Your request exceeded the API rate limit. |\n| 500 Internal Server Error | We were unable to perform the request due to server-side problems. |\n\n## Meta and Pagination\n\nMany API calls will return a `meta` object with paging information.\n\n### Definitions\n\n| Term | Description |\n| ------ | ------------- |\n| **List** | The items returned from the database for your request (not necessarily shown in a single response depending on the **cursor** size). |\n| **Page** | A subset of the full **list** of items. Choose the size of a **page** with the `per_page` parameter. |\n| **Total** | The `total` attribute indicates the number of items in the full **list**.|\n| **Cursor** | Use the `cursor` query parameter to select a next or previous **page**. |\n| **Next** & **Prev** | Use the `next` and `prev` attributes of the `links` meta object as `cursor` values. |\n\n### How to use Paging\n\nIf your result **list** total exceeds the default **cursor** size (the default depends on the route, but is usually 100 records) or the value defined by the `per_page` query param (when present) the response will be returned to you paginated.\n\n### Paging Example\n\n> These examples have abbreviated attributes and sample values. Your actual `cursor` values will be encoded alphanumeric strings.\n\nTo return a **page** with the first two plans in the List:\n\n    curl \"https://api.vultr.com/v2/plans?per_page=2\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\nThe API returns an object similar to this:\n\n    {\n        \"plans\": [\n            {\n                \"id\": \"vc2-1c-2gb\",\n                \"vcpu_count\": 1,\n                \"ram\": 2048,\n                \"locations\": []\n            },\n            {\n                \"id\": \"vc2-24c-97gb\",\n                \"vcpu_count\": 24,\n                \"ram\": 98304,\n                \"locations\": []\n            }\n        ],\n        \"meta\": {\n            \"total\": 19,\n            \"links\": {\n                \"next\": \"WxYzExampleNext\",\n                \"prev\": \"WxYzExamplePrev\"\n            }\n        }\n    }\n\nThe object contains two plans. The `total` attribute indicates that 19 plans are available in the List. To navigate forward in the **list**, use the `next` value (`WxYzExampleNext` in this example) as your `cursor` query parameter.\n\n    curl \"https://api.vultr.com/v2/plans?per_page=2&cursor=WxYzExampleNext\" \\\n      -X GET\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\nLikewise, you can use the example `prev` value `WxYzExamplePrev` to navigate backward.\n\n## Parameters\n\nYou can pass information to the API with three different types of parameters.\n\n### Path parameters\n\nSome API calls require variable parameters as part of the endpoint path. For example, to retrieve information about a user, supply the `user-id` in the endpoint.\n\n    curl \"https://api.vultr.com/v2/users/{user-id}\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\n### Query parameters\n\nSome API calls allow filtering with query parameters. For example, the `/v2/plans` endpoint supports a `type` query parameter. Setting `type=vhf` instructs the API only to return High Frequency Compute plans in the list. You'll find more specifics about valid filters in the endpoint documentation below.\n\n    curl \"https://api.vultr.com/v2/plans?type=vhf\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\nYou can also combine filtering with paging. Use the `per_page` parameter to retreive a subset of vhf plans.\n\n    curl \"https://api.vultr.com/v2/plans?type=vhf&per_page=2\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\n### Request Body\n\nPUT, POST, and PATCH methods may include an object in the request body with a content type of **application/json**. The documentation for each endpoint below has more information about the expected object.\n\n## API Example Conventions\n\nThe examples in this documentation use `curl`, a command-line HTTP client, to demonstrate useage. Linux and macOS computers usually have curl installed by default, and it's [available for download](https://curl.se/download.html) on all popular platforms including Windows.\n\nEach example is split across multiple lines with the `\\` character, which is compatible with a `bash` terminal. A typical example looks like this:\n\n    curl \"https://api.vultr.com/v2/domains\" \\\n      -X POST \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n      -H \"Content-Type: application/json\" \\\n      --data '{\n        \"domain\" : \"example.com\",\n        \"ip\" : \"192.0.2.123\"\n      }'\n\n* The `-X` parameter sets the request method. For consistency, we show the method on all examples, even though it's not explicitly required for GET methods.\n* The `-H` lines set required HTTP headers. These examples are formatted to expand the VULTR\\_API\\_KEY environment variable for your convenience.\n* Examples that require a JSON object in the request body pass the required data via the `--data` parameter.\n\nAll values in this guide are examples. Do not rely on the OS or Plan IDs listed in this guide; use the appropriate endpoint to retreive values before creating resources.\n"
  },
  "servers": [
    {
      "url": "https://api.vultr.com/v2"
    }
  ],
  "paths": {
    "/object-storage": {
      "get": {
        "summary": "List Object Storages",
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object_storages": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/object-storages"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "list of object-storages": {
                    "value": {
                      "object_storages": [
                        {
                          "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                          "date_created": "2020-10-10T01:56:20+00:00",
                          "cluster_id": 2,
                          "region": "ewr",
                          "label": "Example Object Storage",
                          "status": "active",
                          "s3_hostname": "ewr1.vultrobjects.com",
                          "s3_access_key": "00example11223344",
                          "s3_secret_key": "00example1122334455667788990011",
                          "tier": {
                            "OBJSTORETIERID": 5,
                            "bw_gb_price": 0.01,
                            "disk_gb_price": 0.05,
                            "is_default": "no",
                            "price": 50,
                            "ratelimit_ops_bytes": 1048576000,
                            "ratelimit_ops_secs": 4000,
                            "sales_desc": "Low-latency storage for datacenter workloads.",
                            "sales_name": "Performance",
                            "slug": "tier_004k_1000m"
                          }
                        }
                      ],
                      "meta": {
                        "total": 1,
                        "links": {
                          "next": "",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "operationId": "list-object-storages",
        "description": "Get a list of all Object Storage in your account.",
        "security": [
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Number of items requested per page. Default is 100 and Max is 500."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination)."
          }
        ]
      },
      "post": {
        "summary": "Create Object Storage",
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"label\" : \"Example Object Storage\",\n    \"cluster_id\" : 2,\n    \"tier_id\" : 4\n  }'"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object_storage": {
                      "$ref": "#/components/schemas/object-storage"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "object_storage": {
                        "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                        "date_created": "2020-10-10T01:56:20+00:00",
                        "cluster_id": 2,
                        "region": "ewr",
                        "location": "New Jersey",
                        "label": "Example Object Storage",
                        "status": "pending",
                        "s3_hostname": "ewr1.vultrobjects.com",
                        "s3_access_key": "00example11223344",
                        "s3_secret_key": "00example1122334455667788990011"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "create-object-storage",
        "description": "Create new Object Storage. The `cluster_id` attribute is required.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cluster_id": {
                    "type": "integer",
                    "description": "The [Cluster id](#operation/list-object-storage-clusters) where the Object Storage will be created."
                  },
                  "tier_id": {
                    "type": "integer",
                    "description": "The [Tier id](#operation/list-object-storage-tiers) of the tier to set up for. Must be one of available tiers for the cluster."
                  },
                  "label": {
                    "type": "string",
                    "description": "The user-supplied label for this Object Storage."
                  }
                },
                "required": [
                  "cluster_id",
                  "tier_id"
                ]
              },
              "examples": {
                "example request": {
                  "value": {
                    "label": "Example Object Storage",
                    "cluster_id": 2,
                    "tier_id": 4
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      },
      "parameters": []
    },
    "/object-storage/{object-storage-id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "object-storage-id",
          "in": "path",
          "required": true,
          "description": "The [Object Storage id](#operation/list-object-storages)."
        }
      ],
      "get": {
        "summary": "Get Object Storage",
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage/{object-storage-id}\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "object_storage": {
                      "$ref": "#/components/schemas/object-storage"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "object_storage": {
                        "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                        "date_created": "2020-10-10T01:56:20+00:00",
                        "cluster_id": 2,
                        "region": "ewr",
                        "label": "Example Object Storage",
                        "status": "active",
                        "s3_hostname": "ewr1.vultrobjects.com",
                        "s3_access_key": "00example11223344",
                        "s3_secret_key": "00example1122334455667788990011"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-object-storage",
        "description": "Get information about an Object Storage.",
        "security": [
          {
            "API Key": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Object Storage",
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage/{object-storage-id}\" \\\n  -X DELETE \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "delete-object-storage",
        "description": "Delete an Object Storage.",
        "security": [
          {
            "API Key": []
          }
        ]
      },
      "put": {
        "summary": "Update Object Storage",
        "operationId": "update-object-storage",
        "responses": {
          "204": {
            "description": "No Content",
            "headers": {}
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Update the label for an Object Storage.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "The user-supplied label for the Object Storage."
                  }
                },
                "required": [
                  "label"
                ]
              },
              "examples": {
                "request": {
                  "value": {
                    "label": "Updated Object Storage Label"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "security": [
          {
            "API Key": []
          }
        ],
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage/{object-storage-id}\" \\\n  -X PUT \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"label\" : \"Updated Object Storage Label\"\n  }'"
          }
        ]
      }
    },
    "/object-storage/{object-storage-id}/regenerate-keys": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "object-storage-id",
          "in": "path",
          "required": true,
          "description": "The [Object Storage id](#operation/list-object-storages)."
        }
      ],
      "post": {
        "summary": "Regenerate Object Storage Keys",
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage/{object-storage-id}/regenerate-keys\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "s3_credentials": {
                      "type": "object",
                      "properties": {
                        "s3_hostname": {
                          "type": "string",
                          "description": "The [Cluster hostname](#operation/list-object-storage-clusters) for this Object Storage."
                        },
                        "s3_access_key": {
                          "type": "string",
                          "description": "The new Object Storage access key."
                        },
                        "s3_secret_key": {
                          "type": "string",
                          "description": "The new Object Storage secret key."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "s3_credentials": {
                        "s3_hostname": "ewr1.vultrobjects.com",
                        "s3_access_key": "00example11223344",
                        "s3_secret_key": "00example1122334455667788990011"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "regenerate-object-storage-keys",
        "description": "Regenerate the keys for an Object Storage.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/object-storage/clusters": {
      "get": {
        "summary": "Get All Clusters",
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage/clusters\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "clusters": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/clusters"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "clusters": [
                        {
                          "id": 2,
                          "region": "ewr",
                          "hostname": "ewr1.vultrobjects.com",
                          "deploy": "yes"
                        }
                      ],
                      "meta": {
                        "total": 1,
                        "links": {
                          "next": "",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "operationId": "list-object-storage-clusters",
        "description": "Get a list of all Object Storage Clusters.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Number of items requested per page. Default is 100 and Max is 500."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination)."
          }
        ],
        "security": []
      }
    },
    "/object-storage/tiers": {
      "get": {
        "summary": "Get All Tiers",
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage/tiers\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tiers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/tiers"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "tiers": [
                        {
                          "id": 1,
                          "bw_gb_price": 0.01,
                          "disk_gb_price": 0.006,
                          "is_default": "yes",
                          "locations": [
                            {
                              "hostname": "ewr1.vultrobjects.com",
                              "id": 2,
                              "name": "New Jersey",
                              "region": "ewr"
                            }
                          ],
                          "price": 6,
                          "ratelimit_ops_bytes": 314572800,
                          "ratelimit_ops_secs": 400,
                          "sales_desc": "Vultr's historic object storage solution.",
                          "sales_name": "Legacy",
                          "slug": "tier_004h_0300m"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "operationId": "list-object-storage-tiers",
        "description": "Get a list of all Object Storage Tiers.",
        "parameters": [],
        "security": []
      }
    },
    "/object-storage/clusters/{cluster-id}/tiers": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "cluster-id",
          "in": "path",
          "required": true,
          "description": "The [Cluster id](#operation/list-object-storage-clusters)."
        }
      ],
      "get": {
        "summary": "Get All Cluster Tiers",
        "tags": [
          "s3"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/object-storage/clusters/{cluster-id}/tiers\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tiers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/cluster-tiers"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "tiers": [
                        {
                          "id": 1,
                          "bw_gb_price": 0.01,
                          "disk_gb_price": 0.006,
                          "is_default": "yes",
                          "price": 6,
                          "ratelimit_ops_bytes": 314572800,
                          "ratelimit_ops_secs": 400,
                          "sales_desc": "Vultr's historic object storage solution.",
                          "sales_name": "Legacy",
                          "slug": "tier_004h_0300m"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "headers": {}
          }
        },
        "operationId": "list-object-storage-cluster-tiers",
        "description": "Get a list of all Object Storage Tiers for a given Cluster.",
        "parameters": [],
        "security": []
      }
    },
    "/regions": {
      "get": {
        "summary": "List Regions",
        "tags": [
          "region"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/regions\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "regions": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/region"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "region": {
                    "value": {
                      "regions": [
                        {
                          "id": "ams",
                          "city": "Amsterdam",
                          "country": "NL",
                          "continent": "Europe",
                          "options": [
                            "ddos_protection",
                            "block_storage_high_perf",
                            "block_storage_storage_opt",
                            "kubernetes",
                            "load_balancers"
                          ]
                        }
                      ],
                      "meta": {
                        "total": 1,
                        "links": {
                          "next": "",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "list-regions",
        "description": "List all Regions at Vultr.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Number of items requested per page. Default is 100 and Max is 500."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination)."
          }
        ],
        "security": []
      }
    },
    "/regions/{region-id}/availability": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "region-id",
          "in": "path",
          "required": true,
          "description": "The [Region id](#operation/list-regions)."
        }
      ],
      "get": {
        "summary": "List available plans in region",
        "tags": [
          "region"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/regions/{region-id}/availability\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "available_plans": {
                      "type": "array",
                      "description": "An array of Plans available in this Region.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "plans": {
                    "value": {
                      "available_plans": [
                        "vc2-1c-1gb",
                        "vc2-1c-2gb",
                        "vc2-2c-4gb",
                        "vc2-4c-8gb",
                        "vc2-6c-16gb",
                        "vc2-8c-32gb",
                        "vc2-16c-64gb",
                        "vc2-24c-96gb",
                        "vdc-4vcpu-8gb",
                        "vdc-4vcpu-16gb",
                        "vdc-6vcpu-24gb",
                        "vdc-8vcpu-32gb",
                        "vhf-1c-1gb",
                        "vhf-1c-2gb",
                        "vhf-2c-4gb",
                        "vhf-3c-8gb",
                        "vhf-4c-16gb",
                        "vhf-6c-24gb",
                        "vhf-8c-32gb",
                        "vhf-12c-48gb"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "list-available-plans-region",
        "description": "Get a list of the available plans in Region `region-id`. Not all plans are available in all regions.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Filter the results by type.\n\n| **Type** | **Description** |\n|----------|-----------------|\n| all | All available types |\n| vc2 | Cloud Compute |\n| vdc | Dedicated Cloud |\n| vhf | High Frequency Compute |\n| vhp | High Performance |\n| voc | All Optimized Cloud types |\n| voc-g | General Purpose Optimized Cloud |\n| voc-c | CPU Optimized Cloud |\n| voc-m | Memory Optimized Cloud |\n| voc-s | Storage Optimized Cloud |\n| vbm | Bare Metal |\n| vcg | Cloud GPU |\n"
          }
        ],
        "security": []
      }
    },
    "/instances": {
      "get": {
        "summary": "List Instances",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instances": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/instance-get"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "instance": {
                    "value": {
                      "instances": [
                        {
                          "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                          "os": "CentOS SELinux 8 x64",
                          "ram": 2048,
                          "disk": 55,
                          "main_ip": "192.0.2.123",
                          "vcpu_count": 1,
                          "region": "atl",
                          "plan": "vc2-6c-16gb",
                          "date_created": "2020-10-10T01:56:20+00:00",
                          "status": "active",
                          "allowed_bandwidth": 2000,
                          "netmask_v4": "255.255.252.0",
                          "gateway_v4": "192.0.2.1",
                          "power_status": "running",
                          "server_status": "ok",
                          "v6_network": "2001:0db8:1112:18fb::",
                          "v6_main_ip": "2001:0db8:1112:18fb:0200:00ff:fe00:0000",
                          "v6_network_size": 64,
                          "label": "Example Instance",
                          "internal_ip": "",
                          "vpcs": [
                            {
                              "id": "775e26b3-f67d-46b7-87ed-1a0457fb3a5e",
                              "version": 1,
                              "subnet": "10.1.96.3"
                            },
                            {
                              "id": "090a49c0-a1a2-4aab-a263-5d58f180c905",
                              "version": 2,
                              "subnet": "10.1.128.3"
                            }
                          ],
                          "kvm": "https://my.vultr.com/subs/vps/novnc/api.php?data=00example11223344",
                          "hostname": "my_hostname",
                          "os_id": 215,
                          "app_id": 0,
                          "image_id": "",
                          "snapshot_id": "",
                          "firewall_group_id": "",
                          "features": [
                            "ddos_protection",
                            "ipv6",
                            "auto_backups"
                          ],
                          "tags": [
                            "a tag",
                            "another"
                          ],
                          "user_scheme": "root",
                          "pending_charges": 5.42
                        }
                      ],
                      "meta": {
                        "total": 3,
                        "links": {
                          "next": "WxYzExampleNext",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Validation Error"
          }
        },
        "operationId": "list-instances",
        "description": "List all VPS instances in your account.",
        "security": [
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Number of items requested per page. Default is 100 and Max is 500."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "tag",
            "description": "Filter by specific tag.",
            "deprecated": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "label",
            "description": "Filter by label."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "main_ip",
            "description": "Filter by main ip address."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "region",
            "description": "Filter by [Region id](#operation/list-regions)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "firewall_group_id",
            "description": "Filter by [Firewall group id](#operation/list-firewall-groups)."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "hostname",
            "description": "Filter by hostname."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "show_pending_charges",
            "description": "Set to `true` to show pending charges."
          }
        ]
      },
      "post": {
        "summary": "Create Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"region\" : \"ewr\",\n    \"plan\" : \"vc2-6c-16gb\",\n    \"label\" : \"Example Instance\",\n    \"os_id\" : 215,\n    \"user_data\" : \"QmFzZTY0IEV4YW1wbGUgRGF0YQ==\",\n    \"backups\" : \"enabled\",\n    \"hostname\": \"my_hostname\",\n    \"tags\": [\n      \"a tag\",\n      \"another\"\n    ]\n  }'"
          }
        ],
        "responses": {
          "202": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance": {
                      "$ref": "#/components/schemas/instance"
                    }
                  }
                },
                "examples": {
                  "instance": {
                    "value": {
                      "instance": {
                        "id": "4f0f12e5-1f84-404f-aa84-85f431ea5ec2",
                        "os": "CentOS 8 Stream",
                        "ram": 1024,
                        "disk": 0,
                        "main_ip": "0.0.0.0",
                        "vcpu_count": 1,
                        "region": "ewr",
                        "plan": "vc2-1c-1gb",
                        "date_created": "2021-09-14T13:22:20+00:00",
                        "status": "pending",
                        "allowed_bandwidth": 1000,
                        "netmask_v4": "",
                        "gateway_v4": "0.0.0.0",
                        "power_status": "running",
                        "server_status": "none",
                        "v6_network": "",
                        "v6_main_ip": "",
                        "v6_network_size": 0,
                        "label": "",
                        "internal_ip": "",
                        "kvm": "",
                        "hostname": "my_hostname",
                        "os_id": 401,
                        "app_id": 0,
                        "image_id": "",
                        "snapshot_id": "",
                        "firewall_group_id": "",
                        "features": [],
                        "default_password": "v5{Fkvb#2ycPGwHs",
                        "tags": [
                          "a tag",
                          "another"
                        ],
                        "user_scheme": "root"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "create-instance",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "region": {
                    "type": "string",
                    "description": "The [Region id](#operation/list-regions) where the Instance is located."
                  },
                  "plan": {
                    "type": "string",
                    "description": "The [Plan id](#operation/list-plans) to use when deploying this instance."
                  },
                  "os_id": {
                    "type": "integer",
                    "description": "The [Operating System id](#operation/list-os) to use when deploying this instance."
                  },
                  "ipxe_chain_url": {
                    "type": "string",
                    "description": "The URL location of the iPXE chainloader."
                  },
                  "iso_id": {
                    "type": "string",
                    "description": "The [ISO id](#operation/list-isos) to use when deploying this instance."
                  },
                  "script_id": {
                    "type": "string",
                    "description": "The [Startup Script id](#operation/list-startup-scripts) to use when deploying this instance."
                  },
                  "snapshot_id": {
                    "type": "string",
                    "description": "The [Snapshot id](#operation/list-snapshots) to use when deploying the instance."
                  },
                  "enable_ipv6": {
                    "type": "boolean",
                    "description": "Enable IPv6.\n\n* true"
                  },
                  "disable_public_ipv4": {
                    "type": "boolean",
                    "description": "Don't set up a public IPv4 address when IPv6 is enabled. Will not do anything unless `enable_ipv6` is also `true`.\n\n* true"
                  },
                  "attach_private_network": {
                    "type": "array",
                    "description": "Use `attach_vpc` instead. An array of [Private Network ids](#operation/list-networks) to attach to this Instance. This parameter takes precedence over `enable_private_network`. Please choose one parameter.",
                    "deprecated": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "attach_vpc": {
                    "type": "array",
                    "description": "An array of [VPC IDs](#operation/list-vpcs) to attach to this Instance. This parameter takes precedence over `enable_vpc`. Please choose one parameter.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "attach_vpc2": {
                    "type": "array",
                    "description": "Use `attach_vpc` instead. An array of [VPC IDs](#operation/list-vpc2) to attach to this Instance. This parameter takes precedence over `enable_vpc2`. Please choose one parameter.",
                    "deprecated": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "label": {
                    "type": "string",
                    "description": "A user-supplied label for this instance."
                  },
                  "sshkey_id": {
                    "type": "array",
                    "description": "The [SSH Key id](#operation/list-ssh-keys) to install on this instance.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "backups": {
                    "type": "string",
                    "description": "Enable automatic backups for the instance.\n\n* enabled\n* disabled"
                  },
                  "app_id": {
                    "type": "integer",
                    "description": "The [Application id](#operation/list-applications) to use when deploying this instance."
                  },
                  "image_id": {
                    "type": "string",
                    "description": "The [Application image_id](#operation/list-applications) to use when deploying this instance."
                  },
                  "user_data": {
                    "type": "string",
                    "description": "The user-supplied, base64 encoded [user data](https://docs.vultr.com/manage-instance-user-data-with-the-vultr-metadata-api/) to attach to this instance."
                  },
                  "ddos_protection": {
                    "type": "boolean",
                    "description": "Enable DDoS protection (there is an additional charge for this).\n\n* true\n* false"
                  },
                  "activation_email": {
                    "type": "boolean",
                    "description": "Notify by email after deployment.\n\n* true\n* false (default)"
                  },
                  "hostname": {
                    "type": "string",
                    "description": "The hostname to use when deploying this instance."
                  },
                  "tag": {
                    "type": "string",
                    "description": "Use `tags` instead. The user-supplied tag.",
                    "deprecated": true
                  },
                  "firewall_group_id": {
                    "type": "string",
                    "description": "The [Firewall Group id](#operation/list-firewall-groups) to attach to this Instance."
                  },
                  "reserved_ipv4": {
                    "type": "string",
                    "description": "ID of the floating IP to use as the main IP of this server."
                  },
                  "enable_private_network": {
                    "type": "boolean",
                    "description": "Use `enable_vpc` instead.\n\nIf `true`, private networking support will be added to the new server.\n\nThis parameter attaches a single network. When no network exists in the region, it will be automatically created.\n\nIf there are multiple private networks in the instance's region, use `attach_private_network` instead to specify a network.",
                    "deprecated": true
                  },
                  "enable_vpc": {
                    "type": "boolean",
                    "description": "If `true`, VPC support will be added to the new server.\n\nThis parameter attaches a single VPC. When no VPC exists in the region, it will be automatically created.\n\nIf there are multiple VPCs in the instance's region, use `attach_vpc` instead to specify a network."
                  },
                  "enable_vpc2": {
                    "type": "boolean",
                    "description": "Use `enable_vpc` instead.\n\nIf `true`, VPC 2.0 support will be added to the new server.\n\nThis parameter attaches a single VPC 2.0 network. When no VPC 2.0 network exists in the region, it will be automatically created.\n\nIf there are multiple VPC 2.0 networks in the instance's region, use `attach_vpc2` instead to specify a network.",
                    "deprecated": true
                  },
                  "tags": {
                    "type": "array",
                    "description": "Tags to apply to the instance",
                    "items": {
                      "type": "string"
                    }
                  },
                  "user_scheme": {
                    "type": "string",
                    "description": "Linux-only: The user scheme used for logging into this instance. By default, the \"root\" user is configured. Alternatively, a limited user with sudo permissions can be selected.\n\n* root\n* limited"
                  },
                  "app_variables": {
                    "type": "object",
                    "description": "The [app variable inputs](#operation/list-marketplace-app-variables) for configuring the marketplace app (name/value pairs)."
                  }
                },
                "required": [
                  "region",
                  "plan"
                ]
              },
              "examples": {
                "request": {
                  "value": {
                    "region": "ewr",
                    "plan": "vc2-6c-16gb",
                    "label": "Example Instance",
                    "os_id": 215,
                    "user_data": "QmFzZTY0IEV4YW1wbGUgRGF0YQ==",
                    "backups": "enabled",
                    "hostname": "my_hostname",
                    "tags": [
                      "a tag",
                      "another"
                    ]
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "description": "Create a new VPS Instance in a `region` with the desired `plan`. Choose one of the following to deploy the instance:\n\n* `os_id`\n* `iso_id`\n* `snapshot_id`\n* `app_id`\n* `image_id`\n\nSupply other attributes as desired."
      }
    },
    "/instances/{instance-id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "Get Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance": {
                      "$ref": "#/components/schemas/instance-get"
                    }
                  }
                },
                "examples": {
                  "instance": {
                    "value": {
                      "instance": {
                        "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                        "os": "Ubuntu 20.04 x64",
                        "ram": 16384,
                        "disk": 384,
                        "main_ip": "192.0.2.123",
                        "vcpu_count": 4,
                        "region": "ewr",
                        "plan": "vc2-6c-16gb",
                        "date_created": "2020-10-10T01:56:20+00:00",
                        "status": "active",
                        "allowed_bandwidth": 5000,
                        "netmask_v4": "255.255.254.0",
                        "gateway_v4": "192.0.2.1",
                        "power_status": "running",
                        "server_status": "ok",
                        "v6_network": "",
                        "v6_main_ip": "",
                        "v6_network_size": 0,
                        "label": "Example Instance",
                        "internal_ip": "",
                        "vpcs": [
                          {
                            "id": "775e26b3-f67d-46b7-87ed-1a0457fb3a5e",
                            "version": 1,
                            "subnet": "10.1.96.3"
                          },
                          {
                            "id": "090a49c0-a1a2-4aab-a263-5d58f180c905",
                            "version": 2,
                            "subnet": "10.1.128.3"
                          }
                        ],
                        "kvm": "https://my.vultr.com/subs/vps/novnc/api.php?data=00example11223344",
                        "hostname": "my_hostname",
                        "os_id": 215,
                        "app_id": 0,
                        "image_id": "",
                        "snapshot_id": "",
                        "firewall_group_id": "",
                        "features": [
                          "ddos_protection",
                          "ipv6",
                          "auto_backups"
                        ],
                        "tags": [
                          "a tag",
                          "another"
                        ],
                        "user_scheme": "root",
                        "pending_charges": 5.42
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance",
        "description": "Get information about an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      },
      "patch": {
        "summary": "Update Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}\" \\\n  -X PATCH \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"label\" : \"Example Instance\",\n    \"tags\" : [\"a tag\", \"another\"],\n    \"plan\" : \"vc2-24c-97gb\"\n  }'"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance": {
                      "$ref": "#/components/schemas/instance"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "instance": {
                        "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                        "os": "Ubuntu 20.04 x64",
                        "ram": 16384,
                        "disk": 384,
                        "main_ip": "192.0.2.123",
                        "vcpu_count": 4,
                        "region": "ewr",
                        "plan": "vc2-24c-97gb",
                        "date_created": "2020-10-10T01:56:20+00:00",
                        "status": "active",
                        "allowed_bandwidth": 5000,
                        "netmask_v4": "255.255.254.0",
                        "gateway_v4": "192.0.2.1",
                        "power_status": "running",
                        "server_status": "ok",
                        "v6_network": "",
                        "v6_main_ip": "",
                        "v6_network_size": 0,
                        "label": "Example Instance",
                        "internal_ip": "",
                        "kvm": "https://my.vultr.com/subs/vps/novnc/api.php?data=00example11223344",
                        "hostname": "my_hostname",
                        "os_id": 215,
                        "app_id": 0,
                        "image_id": "",
                        "snapshot_id": "",
                        "firewall_group_id": "",
                        "features": [
                          "ddos_protection",
                          "ipv6",
                          "auto_backups"
                        ],
                        "tags": [
                          "a tag",
                          "another"
                        ],
                        "user_scheme": "root"
                      },
                      "job_ids": [
                        "b3123d06-ec83-456c-ac71-ae8c4bc95e18"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "update-instance",
        "description": "Update information for an Instance. All attributes are optional. If not set, the attributes will retain their original values.\n\n**Note:** Changing `os_id`, `app_id` or `image_id` may take a few extra seconds to complete.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "app_id": {
                    "type": "integer",
                    "description": "Reinstall the instance with this [Application id](#operation/list-applications)."
                  },
                  "image_id": {
                    "type": "string",
                    "description": "Reinstall the instance with this [Application image_id](#operation/list-applications)."
                  },
                  "backups": {
                    "description": "Enable automatic backups for the instance.\n\n* enabled\n* disabled",
                    "type": "string"
                  },
                  "firewall_group_id": {
                    "type": "string",
                    "description": "The [Firewall Group id](#operation/list-firewall-groups) to attach to this Instance."
                  },
                  "enable_ipv6": {
                    "type": "boolean",
                    "description": "Enable IPv6.\n\n* true"
                  },
                  "os_id": {
                    "type": "string",
                    "description": "Reinstall the instance with this [ISO id](#operation/list-isos)."
                  },
                  "user_data": {
                    "type": "string",
                    "description": "The user-supplied, base64 encoded [user data](https://docs.vultr.com/manage-instance-user-data-with-the-vultr-metadata-api/) to attach to this instance."
                  },
                  "tag": {
                    "type": "string",
                    "description": "Use `tags` instead. The user-supplied tag.",
                    "deprecated": true
                  },
                  "plan": {
                    "type": "string",
                    "description": "Upgrade the instance with this [Plan id](#operation/list-plans)."
                  },
                  "ddos_protection": {
                    "description": "Enable DDoS Protection (there is an additional charge for this).\n\n* true\n* false",
                    "type": "boolean"
                  },
                  "attach_private_network": {
                    "type": "array",
                    "description": "Use `attach_vpc` instead. An array of [Private Network ids](#operation/list-networks) to attach to this Instance. This parameter takes precedence over `enable_private_network`. Please choose one parameter.",
                    "deprecated": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "attach_vpc": {
                    "type": "array",
                    "description": "An array of [VPC IDs](#operation/list-vpcs) to attach to this Instance. This parameter takes precedence over `enable_vpc`. Please choose one parameter.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "attach_vpc2": {
                    "type": "array",
                    "description": "Use `attach_vpc` instead. An array of [VPC IDs](#operation/list-vpc2) to attach to this Instance. This parameter takes precedence over `enable_vpc2`. Please choose one parameter.",
                    "deprecated": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "detach_private_network": {
                    "type": "array",
                    "description": "Use `detach_vpc` instead. An array of [Private Network ids](#operation/list-networks) to detach from this Instance. This parameter takes precedence over `enable_private_network`.",
                    "deprecated": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "detach_vpc": {
                    "type": "array",
                    "description": "An array of [VPC IDs](#operation/list-vpcs) to detach from this Instance. This parameter takes precedence over `enable_vpc`.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "detach_vpc2": {
                    "type": "array",
                    "description": "Use `detach_vpc` instead. An array of [VPC IDs](#operation/list-vpc2) to detach from this Instance. This parameter takes precedence over `enable_vpc2`.",
                    "deprecated": true,
                    "items": {
                      "type": "string"
                    }
                  },
                  "enable_private_network": {
                    "type": "boolean",
                    "description": "Use `enable_vpc` instead.\n\nIf `true`, private networking support will be added to the new server.\n\nThis parameter attaches a single network. When no network exists in the region, it will be automatically created.\n\nIf there are multiple private networks in the instance's region, use `attach_private_network` instead to specify a network.",
                    "deprecated": true
                  },
                  "enable_vpc": {
                    "type": "boolean",
                    "description": "If `true`, VPC support will be added to the new server.\n\nThis parameter attaches a single VPC. When no VPC exists in the region, it will be automatically created.\n\nIf there are multiple VPCs in the instance's region, use `attach_vpc` instead to specify a VPC."
                  },
                  "enable_vpc2": {
                    "type": "boolean",
                    "description": "Use `enable_vpc` instead.\n\nIf `true`, VPC 2.0 support will be added to the new server.\n\nThis parameter attaches a single VPC 2.0 network. When no VPC 2.0 network exists in the region, it will be automatically created.\n\nIf there are multiple VPC 2.0 networks in the instance's region, use `attach_vpc2` instead to specify a VPC 2.0 network.",
                    "deprecated": true
                  },
                  "label": {
                    "type": "string",
                    "description": "The user supplied label."
                  },
                  "tags": {
                    "type": "array",
                    "description": "Tags to apply to the instance.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "user_scheme": {
                    "type": "string",
                    "description": "Linux-only: The user scheme used for logging into this instance. The instance must be reinstalled for this change to take effect.\n\n* root\n* limited"
                  }
                }
              },
              "examples": {
                "request": {
                  "value": {
                    "label": "Example Instance",
                    "tags": [
                      "a tag",
                      "another"
                    ],
                    "plan": "vc2-24c-97gb"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      },
      "delete": {
        "summary": "Delete Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}\" \\\n  -X DELETE \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "delete-instance",
        "description": "Delete an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/halt": {
      "post": {
        "summary": "Halt Instances",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/halt\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"instance_ids\" : [\n      \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n      \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n      \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "halt-instances",
        "description": "Halt Instances.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instance_ids": {
                    "type": "array",
                    "description": "The [Instance IDs](#operation/list-instances) to halt.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "instance_ids": [
                      "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                      "1d651bd2-b93c-4bb6-8b91-0546fd765f15",
                      "c2790719-278d-474c-8dff-cb35d6e5503f"
                    ]
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      }
    },
    "/instances/reboot": {
      "post": {
        "summary": "Reboot instances",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/reboot\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"instance_ids\" : [\n      \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n      \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n      \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "reboot-instances",
        "description": "Reboot Instances.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instance_ids": {
                    "type": "array",
                    "description": "The [Instance IDs](#operation/list-instances) to reboot.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "instance_ids": [
                      "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                      "1d651bd2-b93c-4bb6-8b91-0546fd765f15",
                      "c2790719-278d-474c-8dff-cb35d6e5503f"
                    ]
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      }
    },
    "/instances/start": {
      "post": {
        "summary": "Start instances",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/start\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"instance_ids\" : [\n      \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\",\n      \"1d651bd2-b93c-4bb6-8b91-0546fd765f15\",\n      \"c2790719-278d-474c-8dff-cb35d6e5503f\"\n    ]\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "start-instances",
        "description": "Start Instances.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "instance_ids": {
                    "type": "array",
                    "description": "The [Instance IDs](#operation/list-instances) to start.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "instance_ids": [
                      "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                      "1d651bd2-b93c-4bb6-8b91-0546fd765f15",
                      "c2790719-278d-474c-8dff-cb35d6e5503f"
                    ]
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      }
    },
    "/instances/{instance-id}/start": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Start instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/start\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "start-instance",
        "description": "Start an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/reboot": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Reboot Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/reboot\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "reboot-instance",
        "description": "Reboot an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/reinstall": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Reinstall Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/reinstall\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"hostname\" : \"my_new_hostname\"\n  }'"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "instance": {
                      "$ref": "#/components/schemas/instance"
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "instance": {
                        "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                        "os": "Ubuntu 20.04 x64",
                        "ram": 16384,
                        "disk": 384,
                        "main_ip": "192.0.2.123",
                        "vcpu_count": 4,
                        "region": "ewr",
                        "plan": "vc2-6c-16gb",
                        "date_created": "2020-10-10T01:56:20+00:00",
                        "status": "active",
                        "allowed_bandwidth": 5000,
                        "netmask_v4": "255.255.254.0",
                        "gateway_v4": "192.0.2.1",
                        "power_status": "running",
                        "server_status": "ok",
                        "v6_network": "",
                        "v6_main_ip": "",
                        "v6_network_size": 0,
                        "label": "Example Instance",
                        "internal_ip": "",
                        "kvm": "https://my.vultr.com/subs/vps/novnc/api.php?data=00example11223344",
                        "hostname": "my_new_hostname",
                        "tag": "Example Tag",
                        "os_id": 215,
                        "app_id": 0,
                        "image_id": "",
                        "snapshot_id": "",
                        "firewall_group_id": "",
                        "features": [
                          "ddos_protection",
                          "ipv6",
                          "auto_backups"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "reinstall-instance",
        "description": "Reinstall an Instance using an optional `hostname`.\n\n**Note:** This action may take a few extra seconds to complete.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "hostname": {
                    "type": "string",
                    "description": "The hostname to use when reinstalling this instance."
                  }
                }
              },
              "examples": {
                "request": {
                  "value": {
                    "hostname": "my_new_hostname"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/bandwidth": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        },
        {
          "schema": {
            "type": "integer"
          },
          "in": "query",
          "name": "date_range",
          "description": "The range of days to include, represented as the number of days relative to the current date. Default 30, Minimum 1 and Max 180."
        }
      ],
      "get": {
        "summary": "Instance Bandwidth",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/bandwidth\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bandwidth": {
                      "type": "object",
                      "description": "This object will contain objects that represent days in the month (UTC). The date is denoted by the nested objects keys.",
                      "properties": {
                        "2020-10-10": {
                          "$ref": "#/components/schemas/bandwidth"
                        },
                        "2020-10-11": {
                          "$ref": "#/components/schemas/bandwidth"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "bandwidth": {
                    "value": {
                      "bandwidth": {
                        "2020-07-25": {
                          "incoming_bytes": 15989787,
                          "outgoing_bytes": 25327729
                        },
                        "2020-07-26": {
                          "incoming_bytes": 13964112,
                          "outgoing_bytes": 22257069
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance-bandwidth",
        "description": "Get bandwidth information about an Instance.<br><br>The `bandwidth` object in a successful response contains objects representing a day in the month. The date is denoted by the nested object keys. Days begin and end in the UTC timezone. The bandwidth utilization data contained within the date object is refreshed periodically. We do not recommend using this endpoint to gather real-time metrics.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/neighbors": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "Get Instance neighbors",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/neighbors\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "neighbors": {
                      "type": "array",
                      "description": "An array of [Instance ids](#operation/list-instances) in the same location as this Instance.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "neighbors": [
                        "478dbfe7-43f8-4dc8-940c-8bb61f547400",
                        "a8047e6b-16bd-42be-8351-58df7e5ab89c"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance-neighbors",
        "security": [
          {
            "API Key": []
          }
        ],
        "description": "Get a list of other instances in the same location as this Instance."
      }
    },
    "/instances/{instance-id}/private-networks": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "List instance Private Networks",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/private-networks\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "private_networks": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/private-networks"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "private_networks": [
                        {
                          "network_id": "d325e78b-bcec-4d4e-b9b8-9c294f37b04d",
                          "mac_address": "00:00:5e:00:53:5e",
                          "ip_address": "10.99.0.123"
                        }
                      ],
                      "meta": {
                        "total": 1,
                        "links": {
                          "next": "",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "list-instance-private-networks",
        "security": [
          {
            "API Key": []
          }
        ],
        "description": "**Deprecated**: use [List Instance VPCs](#operation/list-instance-vpcs) instead.<br><br>List the private networks for an Instance.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Number of items requested per page. Default is 100 and Max is 500."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination)."
          }
        ],
        "deprecated": true
      }
    },
    "/instances/{instance-id}/vpcs": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "List instance VPCs",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/vpcs\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vpcs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/instance-vpc"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "vpcs": [
                        {
                          "id": "d325e78b-bcec-4d4e-b9b8-9c294f37b04d",
                          "mac_address": "00:00:5e:00:53:5e",
                          "ip_address": "10.99.0.123"
                        }
                      ],
                      "meta": {
                        "total": 1,
                        "links": {
                          "next": "",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "list-instance-vpcs",
        "security": [
          {
            "API Key": []
          }
        ],
        "description": "List the VPCs for an Instance.",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Number of items requested per page. Default is 100 and Max is 500."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination)."
          }
        ]
      }
    },
    "/instances/{instance-id}/vpc2": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "List Instance VPC 2.0 Networks",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/vpc2\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "vpcs": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/instance-vpc2"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "vpcs": [
                        {
                          "id": "d325e78b-bcec-4d4e-b9b8-9c294f37b04d",
                          "mac_address": "00:00:5e:00:53:5e",
                          "ip_address": "10.99.0.123"
                        }
                      ],
                      "meta": {
                        "total": 1,
                        "links": {
                          "next": "",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "list-instance-vpc2",
        "security": [
          {
            "API Key": []
          }
        ],
        "description": "List the VPC 2.0 networks for an Instance.<br><br>**Deprecated**: Migrate to VPC Networks and use [List Instance VPCs](#operation/list-instance-vpcs) instead.",
        "deprecated": true,
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Number of items requested per page. Default is 100 and Max is 500."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination)."
          }
        ]
      }
    },
    "/instances/{instance-id}/iso": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "Get Instance ISO Status",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/iso\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "iso_status": {
                      "type": "object",
                      "properties": {
                        "iso_id": {
                          "description": "The [ISO id](#operation/list-isos).",
                          "type": "string"
                        },
                        "state": {
                          "type": "string",
                          "description": "The status of this ISO.\n* ready\n* attached"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "iso_status": {
                        "state": "ready",
                        "iso_id": "0532a75b-14e8-48b8-b27e-1ebcf382a804"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance-iso-status",
        "description": "Get the ISO status for an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/iso/attach": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "summary": "Attach ISO to Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/iso/attach\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"iso_id\" : \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n  }'"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "iso_status": {
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "description": "State of the ISO\n\n* ismounting"
                        },
                        "iso_id": {
                          "type": "string",
                          "description": "The [ISO id](#operation/list-isos) being attached."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "iso_status": {
                        "status": "ismounting",
                        "iso_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "attach-instance-iso",
        "description": "Attach an ISO to an Instance.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "iso_id": {
                    "description": "The [ISO id](#operation/list-isos) to attach to this Instance.",
                    "type": "string"
                  }
                }
              },
              "examples": {
                "request": {
                  "value": {
                    "iso_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/iso/detach": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Detach ISO from instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/iso/detach\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "iso_status": {
                      "type": "object",
                      "properties": {
                        "state": {
                          "type": "string",
                          "description": "State of the ISO\n\n* isunmounting"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "iso_status": {
                        "status": "isunmounting"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "detach-instance-iso",
        "description": "Detach the ISO from an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/private-networks/attach": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Attach Private Network to Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/private-networks/attach\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "attach-instance-network",
        "description": "Attach Private Network to an Instance.<br><br>**Deprecated**: use [Attach VPC to Instance](#operation/attach-instance-vpc) instead.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "network_id": {
                    "type": "string",
                    "description": "The [Private Network id](#operation/list-networks) to attach to this Instance."
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "network_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "deprecated": true
      }
    },
    "/instances/{instance-id}/private-networks/detach": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Detach Private Network from Instance.",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/private-networks/detach\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"network_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "detach-instance-network",
        "description": "Detach Private Network from an Instance.<br><br>**Deprecated**: use [Detach VPC from Instance](#operation/detach-instance-vpc) instead.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "network_id": {
                    "type": "string",
                    "description": "The [Private Network id](#operation/list-networks) to detach from this Instance."
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "network_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "deprecated": true
      }
    },
    "/instances/{instance-id}/vpcs/attach": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Attach VPC to Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/vpcs/attach\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"vpc_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "attach-instance-vpc",
        "description": "Attach a VPC to an Instance.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vpc_id": {
                    "type": "string",
                    "description": "The [VPC ID](#operation/list-vpcs) to attach to this Instance."
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "vpc_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      }
    },
    "/instances/{instance-id}/vpcs/detach": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Detach VPC from Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/vpcs/detach\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"vpc_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "detach-instance-vpc",
        "description": "Detach a VPC from an Instance.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vpc_id": {
                    "type": "string",
                    "description": "The [VPC ID](#operation/list-vpcs) to detach from this Instance."
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "vpc_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      }
    },
    "/instances/{instance-id}/vpc2/attach": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Attach VPC 2.0 Network to Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/vpc2/attach\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"vpc_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n    \"ip_address\": \"10.1.144.4\"\n  }'"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "attach-instance-vpc2",
        "description": "Attach a VPC 2.0 Network to an Instance.<br><br>**Deprecated**: Migrate to VPC Networks and use [Attach VPC to Instance](#operation/attach-instance-vpc) instead.",
        "deprecated": true,
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vpc_id": {
                    "type": "string",
                    "description": "The [VPC ID](#operation/list-vpc2) to attach to this Instance."
                  },
                  "ip_address": {
                    "type": "string",
                    "description": "The IP address to use for this instance on the attached VPC 2.0 network.  "
                  }
                },
                "required": [
                  "vpc_id"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "vpc_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                    "ip_address": "10.1.144.4"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      }
    },
    "/instances/{instance-id}/vpc2/detach": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Detach VPC 2.0 Network from Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/vpc2/detach\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"vpc_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n  }'"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "detach-instance-vpc2",
        "description": "Detach a VPC 2.0 Network from an Instance.<br><br>**Deprecated**: Migrate to VPC Networks and use [Detach VPC from Instance](#operation/detach-instance-vpc) instead.",
        "deprecated": true,
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "vpc_id": {
                    "type": "string",
                    "description": "The [VPC ID](#operation/list-vpc2) to detach from this Instance."
                  }
                },
                "required": [
                  "vpc_id"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "vpc_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      }
    },
    "/instances/{instance-id}/backup-schedule": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Set Instance Backup Schedule",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/backup-schedule\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"type\": \"daily\",\n    \"hour\": 10,\n    \"dow\": 1,\n    \"dom\": 1\n  }'"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "create-instance-backup-schedule",
        "description": "Set the backup schedule for an Instance in UTC. The `type` is required.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Type of backup schedule:\n\n|   | Value | Description |\n| - | ------ | ------------- |\n|   | daily | Back up once per day at `hour`. |\n|   | weekly | Back up once per week on `dow` at `hour`. |\n|   | monthly | Back up each month at `dom` at `hour`. |\n|   | daily\\_alt\\_even | Back up on even dates at `hour`. |\n|   | daily\\_alt\\_odd | Back up on odd dates at `hour`. |"
                  },
                  "hour": {
                    "description": "Hour of day to run in UTC.",
                    "type": "integer"
                  },
                  "dow": {
                    "description": "Day of week to run.\n\n|   | Value | Description |\n| - | ------ | ------------- |\n|   | 1 | Sunday |\n|   | 2 | Monday |\n|   | 3 | Tuesday |\n|   | 4 | Wednesday |\n|   | 5 | Thursday |\n|   | 6 | Friday |\n|   | 7 | Saturday |",
                    "type": "integer"
                  },
                  "dom": {
                    "description": "Day of month to run. Use values between 1 and 28.",
                    "type": "integer"
                  }
                },
                "required": [
                  "type"
                ]
              },
              "examples": {
                "request": {
                  "value": {
                    "type": "daily",
                    "hour": 10,
                    "dow": 1,
                    "dom": 1
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "security": [
          {
            "API Key": []
          }
        ]
      },
      "get": {
        "summary": "Get Instance Backup Schedule",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/backup-schedule\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "backup_schedule": {
                      "$ref": "#/components/schemas/backup-schedule"
                    }
                  }
                },
                "examples": {
                  "backup-schedule": {
                    "value": {
                      "backup_schedule": {
                        "enabled": true,
                        "type": "daily",
                        "next_scheduled_time_utc": "2020-07-28 00:00:00",
                        "hour": 10,
                        "dow": 1,
                        "dom": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance-backup-schedule",
        "description": "Get the backup schedule for an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/restore": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Restore Instance",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/restore\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"backup_id\": \"cb676a46-66fd-4dfb-b839-443f2e6c0b60\"\n  }'"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "restore_type": {
                          "type": "string"
                        },
                        "restore_id": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "status": {
                        "restore_type": "backup_id",
                        "restore_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
                        "status": "inprogress"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "restore-instance",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "backup_id": {
                    "type": "string",
                    "description": "The [Backup id](#operation/list-backups) used to restore this instance."
                  },
                  "snapshot_id": {
                    "type": "string",
                    "description": "The [Snapshot id](#operation/list-snapshots) used to restore this instance."
                  }
                }
              },
              "examples": {
                "request": {
                  "value": {
                    "backup_id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "description": "Restore an Instance from either `backup_id` or `snapshot_id`.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/ipv4": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "List Instance IPv4 Information",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/ipv4\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ipv4s": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/baremetal-ipv4"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "ipv4": {
                    "value": {
                      "ipv4s": [
                        {
                          "ip": "192.0.2.123",
                          "netmask": "255.255.254.0",
                          "gateway": "192.0.2.1",
                          "type": "main_ip",
                          "reverse": "host1.example.com"
                        },
                        {
                          "ip": "203.0.113.123",
                          "netmask": "255.255.255.255",
                          "gateway": "",
                          "type": "secondary_ip",
                          "reverse": "host2.example.com"
                        },
                        {
                          "ip": "10.99.0.123",
                          "netmask": "255.255.0.0",
                          "gateway": "",
                          "type": "private",
                          "reverse": ""
                        }
                      ],
                      "meta": {
                        "total": 3,
                        "links": {
                          "next": "",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance-ipv4",
        "security": [
          {
            "API Key": []
          }
        ],
        "description": "List the IPv4 information for an Instance.",
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "public_network",
            "description": "If `true`, includes information about the public network adapter (such as MAC address) with the `main_ip` entry."
          },
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "per_page",
            "description": "Number of items requested per page. Default is 100 and Max is 500.\n"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "cursor",
            "description": "Cursor for paging. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination)."
          }
        ]
      },
      "post": {
        "summary": "Create IPv4",
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/ipv4\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"reboot\" : true\n  }'"
          }
        ],
        "operationId": "create-instance-ipv4",
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                },
                "examples": {
                  "example": {
                    "value": {
                      "ipv4": {
                        "ip": "192.0.2.123",
                        "netmask": "255.255.254.0",
                        "gateway": "192.0.2.1",
                        "type": "secondary_ip",
                        "reverse": "192.0.2.123.vultr.com"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Create an IPv4 address for an Instance.",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reboot": {
                    "type": "boolean",
                    "description": "Set if the server is rebooted immediately after the IPv4 address is created.\n\n* true (default)\n* false"
                  }
                }
              },
              "examples": {
                "example": {
                  "value": {
                    "reboot": true
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "tags": [
          "instances"
        ]
      }
    },
    "/instances/{instance-id}/ipv6": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "Get Instance IPv6 Information",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/ipv6\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ipv6s": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/baremetal-ipv6"
                      }
                    },
                    "meta": {
                      "$ref": "#/components/schemas/meta"
                    }
                  }
                },
                "examples": {
                  "ipv6": {
                    "value": {
                      "ipv6s": [
                        {
                          "ip": "2001:0db8:5:6bb:5400:02ff:fee5:3fe3",
                          "network": "2001:0db8:5:6bb::",
                          "network_size": 64,
                          "type": "main_ip"
                        }
                      ],
                      "meta": {
                        "total": 1,
                        "links": {
                          "next": "",
                          "prev": ""
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance-ipv6",
        "security": [
          {
            "API Key": []
          }
        ],
        "description": "Get the IPv6 information for an VPS Instance."
      }
    },
    "/instances/{instance-id}/ipv6/reverse": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Create Instance Reverse IPv6",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/ipv6/reverse\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"ip\" : \"2001:0db8:5:6bb:5400:2ff:fee5:2\",\n    \"reverse\" : \"foo.example.com\"\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "create-instance-reverse-ipv6",
        "description": "Create a reverse IPv6 entry for an Instance. The `ip` and `reverse` attributes are required. IP address must be in full, expanded format.",
        "parameters": [],
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "description": "The IPv6 address in full, expanded format."
                  },
                  "reverse": {
                    "type": "string",
                    "description": "The IPv6 reverse entry."
                  }
                },
                "required": [
                  "ip",
                  "reverse"
                ]
              },
              "examples": {
                "request": {
                  "value": {
                    "ip": "2001:0db8:0005:6bb0:5400:2ff0:fee5:0002",
                    "reverse": "foo.example.com"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      },
      "get": {
        "summary": "List Instance IPv6 Reverse",
        "operationId": "list-instance-ipv6-reverse",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reverse_ipv6s": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "reverse": {
                            "type": "string",
                            "description": "The IPv6 reverse entry."
                          },
                          "ip": {
                            "type": "string",
                            "description": "The IPv6 address."
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "reverse_ipv6s": [
                        {
                          "ip": "2001:0db8:5:6bb:5400:2ff:fee5:1",
                          "reverse": "foo.example.com"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/ipv6/reverse\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "description": "List the reverse IPv6 information for an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/ipv4/reverse": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Create Instance Reverse IPv4",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/ipv4/reverse\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"ip\" : \"192.0.2.123\",\n    \"reverse\" : \"foo.example.com\"\n  }'"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "create-instance-reverse-ipv4",
        "description": "Create a reverse IPv4 entry for an Instance. The `ip` and `reverse` attributes are required. ",
        "parameters": [],
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string",
                    "description": "The IPv4 address."
                  },
                  "reverse": {
                    "type": "string",
                    "description": "The IPv4 reverse entry."
                  }
                },
                "required": [
                  "ip",
                  "reverse"
                ]
              },
              "examples": {
                "request": {
                  "value": {
                    "ip": "192.0.2.123",
                    "reverse": "foo.example.com"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        }
      }
    },
    "/instances/{instance-id}/user-data": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "Get Instance User Data",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/user-data\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "string",
                          "description": "The user-supplied, base64 encoded [user data](https://docs.vultr.com/manage-instance-user-data-with-the-vultr-metadata-api/) attached to this instance."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "response": {
                    "value": {
                      "user_data": {
                        "data": "QmFzZTY0IEV4YW1wbGUgRGF0YQ=="
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-instance-userdata",
        "security": [
          {
            "API Key": []
          }
        ],
        "description": "Get the user-supplied, base64 encoded [user data](https://docs.vultr.com/manage-instance-user-data-with-the-vultr-metadata-api/) for an Instance."
      }
    },
    "/instances/{instance-id}/halt": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Halt Instance",
        "operationId": "halt-instance",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Halt an Instance.",
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/halt\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "security": [
          {
            "API Key": []
          }
        ],
        "tags": [
          "instances"
        ]
      }
    },
    "/instances/{instance-id}/ipv4/reverse/default": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "post": {
        "summary": "Set Default Reverse DNS Entry",
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/reverse/default\" \\\n  -X POST \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\" \\\n  -H \"Content-Type: application/json\" \\\n  --data '{\n    \"ip\" : \"192.0.2.123\"\n  }'"
          }
        ],
        "operationId": "post-instances-instance-id-ipv4-reverse-default",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "description": "Set a reverse DNS entry for an IPv4 address",
        "security": [
          {
            "API Key": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ip": {
                    "type": "string"
                  }
                },
                "required": [
                  "ip"
                ]
              },
              "examples": {
                "example": {
                  "value": {
                    "ip": "192.0.2.123"
                  }
                }
              }
            }
          },
          "description": "Include a JSON object in the request body with a content type of **application/json**."
        },
        "tags": [
          "instances"
        ]
      }
    },
    "/instances/{instance-id}/ipv4/{ipv4}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "ipv4",
          "in": "path",
          "required": true,
          "description": "The IPv4 address."
        }
      ],
      "delete": {
        "summary": "Delete IPv4 Address",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/ipv4/{ipv4}\" \\\n  -X DELETE \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "delete-instance-ipv4",
        "description": "Delete an IPv4 address from an Instance.",
        "security": [
          {
            "API Key": []
          }
        ],
        "parameters": []
      }
    },
    "/instances/{instance-id}/ipv6/reverse/{ipv6}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "ipv6",
          "in": "path",
          "required": true,
          "description": "The IPv6 address."
        }
      ],
      "delete": {
        "summary": "Delete Instance Reverse IPv6",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/ipv6/reverse/{ipv6}\" \\\n  -X DELETE \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "operationId": "delete-instance-reverse-ipv6",
        "description": "Delete the reverse IPv6 for an Instance.",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    },
    "/instances/{instance-id}/upgrades": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "instance-id",
          "in": "path",
          "required": true,
          "description": "The [Instance ID](#operation/list-instances)."
        }
      ],
      "get": {
        "summary": "Get Available Instance Upgrades",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/{instance-id}/upgrades\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "upgrades": {
                      "type": "object",
                      "properties": {
                        "applications": {
                          "type": "array",
                          "items": {}
                        },
                        "plans": {
                          "type": "array",
                          "items": {}
                        },
                        "os": {
                          "type": "array",
                          "items": {}
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "upgrades": {
                        "os": [
                          {
                            "id": 900,
                            "name": "Example CentOS 6 x64",
                            "arch": "x64",
                            "family": "centos"
                          },
                          {
                            "id": 901,
                            "name": "Example CentOS 6 i386",
                            "arch": "i386",
                            "family": "centos"
                          }
                        ],
                        "applications": [
                          {
                            "id": 1,
                            "name": "LEMP",
                            "short_name": "lemp",
                            "deploy_name": "LEMP on CentOS 6 x64",
                            "type": "one-click",
                            "vendor": "vultr",
                            "image_id": ""
                          },
                          {
                            "id": 39,
                            "name": "LEMP",
                            "short_name": "lemp",
                            "deploy_name": "LEMP on CentOS 7 x64",
                            "type": "one-click",
                            "vendor": "vultr",
                            "image_id": ""
                          },
                          {
                            "id": 1028,
                            "name": "OpenLiteSpeed WordPress",
                            "short_name": "openlitespeedwordpress",
                            "deploy_name": "OpenLiteSpeed WordPress on Ubuntu 20.04 x64",
                            "type": "marketplace",
                            "vendor": "LiteSpeed_Technologies",
                            "image_id": "openlitespeed-wordpress"
                          }
                        ],
                        "plans": [
                          "vc2-2c-4gb",
                          "vc2-4c-8gb",
                          "vc2-6c-16gb",
                          "vc2-8c-64gb",
                          "vc2-16c-64gb",
                          "vc2-24c-97gb"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance-upgrades",
        "description": "Get available upgrades for an Instance",
        "security": [
          {
            "API Key": []
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "type",
            "description": "Filter upgrade by type:\n\n- all (applications, os, plans)\n- applications\n- os\n- plans"
          }
        ]
      }
    },
    "/instances/jobs/{job-id}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "job-id",
          "in": "path",
          "required": true,
          "description": "The [Job ID](#operation/update-instance)."
        }
      ],
      "get": {
        "summary": "Get Instance Job",
        "tags": [
          "instances"
        ],
        "x-codeSamples": [
          {
            "lang": "Curl",
            "source": "curl \"https://api.vultr.com/v2/instances/jobs/{job-id}\" \\\n  -X GET \\\n  -H \"Authorization: Bearer ${VULTR_API_KEY}\""
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "job": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "A unique ID for the instance job."
                        },
                        "vps_id": {
                          "type": "string",
                          "description": "ID of the VPS subscription"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of job performed on the Instance."
                        },
                        "state": {
                          "type": "string",
                          "description": "Current state of the Instance job."
                        },
                        "info": {
                          "type": "string",
                          "description": "Information on the Instance job."
                        },
                        "added_at": {
                          "type": "string",
                          "description": "The date this job was added."
                        },
                        "updated_at": {
                          "type": "string",
                          "description": "The date this job was updated."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "job": {
                        "id": "b3123d06-ec83-456c-ac71-ae8c4bc95e18",
                        "vps_id": "243f120d-400a-4060-b864-8b21d5b9cc2b",
                        "type": "UPGRADE",
                        "state": "success",
                        "info": "Upgrade completed successfully!",
                        "added_at": "2025-05-05 14:54:34",
                        "updated_at": "2025-05-05 14:54:44"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-instance-job",
        "description": "Get available information for an Instance job",
        "security": [
          {
            "API Key": []
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "retention-rule-id": {
        "name": "retention-rule-id",
        "in": "path",
        "required": true,
        "description": "The [Retention Rule ID](#components/schemas/retention-rule/properties/id). Which can be found by [List Retention Rules](#operation/list-retention-rules).",
        "schema": {
          "type": "integer"
        }
      },
      "registry-id": {
        "name": "registry-id",
        "in": "path",
        "required": true,
        "description": "The [Registry ID](#components/schemas/registry/properties/id). Which can be found by [List Registries](#operation/list-registries).",
        "schema": {
          "type": "string"
        }
      },
      "vcr_region": {
        "name": "VCR Region",
        "required": true,
        "description": "The [VCR Region](#components/schemas/replication/properties/region). Which can be found by [List Region](#operation/list-registry-regions)."
      },
      "repository-image": {
        "name": "repository-image",
        "in": "path",
        "required": true,
        "description": "The [Repository Image](#components/schemas/registry-repository/properties/image). Which can be found by [List Repositories](#operation/list-registry-repositories).",
        "schema": {
          "type": "string"
        }
      },
      "artifact-digest": {
        "name": "artifact-digest",
        "in": "path",
        "required": true,
        "description": "The [Artifact Digest](#components/schemas/registry-repository-artifact/properties/digest). Which can be found by [List Artifacts](#operation/list-registry-repository-artifacts)."
      },
      "harbor-user-id": {
        "name": "harbor-user-id",
        "in": "path",
        "required": true,
        "description": "The [Harbor User ID](#components/schemas/registry-user/properties/id). Which can be found by [Get Current User](#operation/get-current-harbor-user)."
      },
      "robot-name": {
        "name": "robot-name",
        "in": "path",
        "required": true,
        "description": "The [Robot Name](#components/schemas/registry-robot/properties/name). Which can be found by [List Robots](#operation/list-registry-robots)."
      },
      "docker-credentials-expiry-seconds": {
        "name": "expiry_seconds",
        "in": "query",
        "description": "The seconds until these credentials expire. When set to 0, credentials do not expire. The default value is 0",
        "default": 0,
        "schema": {
          "type": "integer"
        }
      },
      "docker-credentials-read-write": {
        "name": "read_write",
        "in": "query",
        "description": "Whether these credentials will have only PULL access or PUSH access as well. If true these credentials can PUSH to repos in this registry. If false, these credentials can only PULL. Default is false.",
        "default": false,
        "schema": {
          "type": "boolean"
        }
      },
      "kubernetes-docker-credentials-base64-encode": {
        "name": "base64_encode",
        "in": "query",
        "description": "Whether this YAML will be returned in a base64 encoded string for ease of downloading. If true, the response will be a base64 encoded string. Default is false.",
        "default": false,
        "schema": {
          "type": "boolean"
        }
      }
    },
    "schemas": {
      "attached-vpcs": {
        "title": "attached-vpcs",
        "type": "object",
        "description": "Information about a specific VPC Network to which the instance is attached.",
        "properties": {
          "id": {
            "type": "string",
            "description": "The ID of the VPC Network."
          },
          "version": {
            "type": "integer",
            "description": "The version of VPC (1 or 2).",
            "deprecated": true
          },
          "subnet": {
            "type": "string",
            "description": "The IP subnet used for the instance on the VPC Network."
          }
        }
      },
      "instance-vpc": {
        "title": "instance-vpc",
        "type": "object",
        "x-examples": {
          "example": {
            "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
            "mac_address": "00:00:5e:00:53:5e",
            "ip_address": "10.99.0.0"
          }
        },
        "description": "VPC information.",
        "x-tags": [
          "VPC"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the VPC."
          },
          "mac_address": {
            "type": "string",
            "description": "The MAC address to use for this instance on the attached VPC network."
          },
          "ip_address": {
            "type": "string",
            "description": "The IP address to use for this instance on the attached VPC network."
          }
        }
      },
      "instance-vpc2": {
        "title": "instance-vpc2",
        "type": "object",
        "x-examples": {
          "example": {
            "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
            "mac_address": "00:00:5e:00:53:5e",
            "ip_block": "10.99.0.0"
          }
        },
        "description": "VPC 2.0 information.",
        "x-tags": [
          "VPC"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the VPC."
          },
          "mac_address": {
            "type": "string",
            "description": "The MAC address to use for this instance on the attached VPC 2.0 network."
          },
          "ip_address": {
            "type": "string",
            "description": "The IP address to use for this instance on the attached VPC 2.0 network."
          }
        },
        "required": [
          "id"
        ]
      },
      "object-storages": {
        "title": "object-storage",
        "type": "object",
        "x-tags": [
          "s3"
        ],
        "x-examples": {
          "object storage": {
            "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
            "date_created": "2020-10-10T01:56:20+00:00",
            "cluster_id": 2,
            "region": "ewr",
            "label": "Example Object Storage",
            "status": "active",
            "s3_hostname": "ewr1.vultrobjects.com",
            "s3_access_key": "00example11223344",
            "s3_secret_key": "00example1122334455667788990011",
            "tier": {
              "OBJSTORETIERID": 5,
              "bw_gb_price": 0.01,
              "disk_gb_price": 0.05,
              "is_default": "no",
              "price": 50,
              "ratelimit_ops_bytes": 1048576000,
              "ratelimit_ops_secs": 4000,
              "sales_desc": "Low-latency storage for datacenter workloads.",
              "sales_name": "Performance",
              "slug": "tier_004k_1000m"
            }
          }
        },
        "description": "Object Storage information.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the Object Storage."
          },
          "date_created": {
            "type": "string",
            "description": "Date the Object Store was created."
          },
          "cluster_id": {
            "type": "integer",
            "description": "The [Cluster id](#operation/list-object-storage-clusters)."
          },
          "region": {
            "type": "string",
            "description": "The [Region id](#operation/list-regions) for this Object Storage."
          },
          "label": {
            "type": "string",
            "description": "The user-supplied label for this Object Storage."
          },
          "status": {
            "type": "string",
            "description": "The status of this Object Storage.\n\n* active\n* pending"
          },
          "s3_hostname": {
            "type": "string",
            "description": "The [Cluster hostname](#operation/list-object-storage-clusters) for this Object Storage."
          },
          "s3_access_key": {
            "type": "string",
            "description": "The Object Storage access key."
          },
          "s3_secret_key": {
            "type": "string",
            "description": "The Object Storage secret key."
          },
          "tier": {
            "type": "object",
            "description": "An object containing additional tier info for this object storage.",
            "properties": {
              "OBJSTORETIERID": {
                "type": "integer",
                "description": "Object Storage Tier ID."
              },
              "bw_gb_price": {
                "type": "float",
                "description": "Price per additional gigabyte of bandwidth."
              },
              "disk_gb_price": {
                "type": "float",
                "description": "Price per additional gigabyte of capacity."
              },
              "is_default": {
                "type": "string",
                "description": "Is this tier the default?"
              },
              "price": {
                "type": "float",
                "description": "Monthly price for this tier."
              },
              "ratelimit_ops_bytes": {
                "type": "integer",
                "description": "Rate limit on the number of bytes per second."
              },
              "ratelimit_ops_secs": {
                "type": "integer",
                "description": "Rate limit on the number of operations per second."
              },
              "sales_desc": {
                "type": "string",
                "description": "Sales description."
              },
              "sales_name": {
                "type": "string",
                "description": "Sales name."
              },
              "slug": {
                "type": "string",
                "description": "Slug, unique name."
              }
            }
          }
        }
      },
      "object-storage": {
        "title": "object-storage",
        "type": "object",
        "x-tags": [
          "s3"
        ],
        "x-examples": {
          "object storage": {
            "id": "cb676a46-66fd-4dfb-b839-443f2e6c0b60",
            "date_created": "2020-10-10T01:56:20+00:00",
            "cluster_id": 2,
            "region": "ewr",
            "label": "Example Object Storage",
            "status": "active",
            "s3_hostname": "ewr1.vultrobjects.com",
            "s3_access_key": "00example11223344",
            "s3_secret_key": "00example1122334455667788990011"
          }
        },
        "description": "Object Storage information.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the Object Storage."
          },
          "date_created": {
            "type": "string",
            "description": "Date the Object Store was created."
          },
          "cluster_id": {
            "type": "integer",
            "description": "The [Cluster id](#operation/list-object-storage-clusters)."
          },
          "region": {
            "type": "string",
            "description": "The [Region id](#operation/list-regions) for this Object Storage."
          },
          "label": {
            "type": "string",
            "description": "The user-supplied label for this Object Storage."
          },
          "status": {
            "type": "string",
            "description": "The status of this Object Storage.\n\n* active\n* pending"
          },
          "s3_hostname": {
            "type": "string",
            "description": "The [Cluster hostname](#operation/list-object-storage-clusters) for this Object Storage."
          },
          "s3_access_key": {
            "type": "string",
            "description": "The Object Storage access key."
          },
          "s3_secret_key": {
            "type": "string",
            "description": "The Object Storage secret key."
          }
        }
      },
      "clusters": {
        "title": "clusters",
        "type": "object",
        "x-tags": [
          "s3"
        ],
        "description": "Object Storage Cluster information.",
        "x-examples": {
          "object storage cluster": {
            "id": 1,
            "region": "ewr",
            "hostname": "ewr1.vultrobjects.com",
            "deploy": "yes"
          }
        },
        "properties": {
          "id": {
            "type": "integer",
            "description": "A unique ID for the Object Storage cluster."
          },
          "region": {
            "type": "string",
            "description": "The [Region id](#operation/list-regions) where the cluster is located."
          },
          "hostname": {
            "type": "string",
            "description": "The cluster host name."
          },
          "deploy": {
            "type": "string",
            "description": "The Cluster is eligible for Object Storage deployment.\n\n* yes\n* no"
          }
        }
      },
      "tiers": {
        "title": "tiers",
        "type": "object",
        "description": "Object Storage Tier information.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Object Storage Tier ID."
          },
          "bw_gb_price": {
            "type": "float",
            "description": "Price per additional gigabyte of bandwidth."
          },
          "disk_gb_price": {
            "type": "float",
            "description": "Price per additional gigabyte of capacity."
          },
          "is_default": {
            "type": "string",
            "description": "Is this tier the default?"
          },
          "price": {
            "type": "float",
            "description": "Monthly price for this tier."
          },
          "ratelimit_ops_bytes": {
            "type": "integer",
            "description": "Rate limit on the number of bytes per second."
          },
          "ratelimit_ops_secs": {
            "type": "integer",
            "description": "Rate limit on the number of operations per second."
          },
          "sales_desc": {
            "type": "string",
            "description": "Sales description."
          },
          "sales_name": {
            "type": "string",
            "description": "Sales name."
          },
          "slug": {
            "type": "string",
            "description": "Slug, unique name."
          },
          "locations": {
            "type": "array",
            "description": "Clusters where the tier is available.",
            "items": {
              "type": "object",
              "properties": {
                "hostname": {
                  "type": "string",
                  "description": "Cluster hostname."
                },
                "id": {
                  "type": "integer",
                  "description": "Cluster ID."
                },
                "name": {
                  "type": "string",
                  "description": "Cluster name."
                },
                "region": {
                  "type": "string",
                  "description": "Cluster region."
                }
              }
            }
          }
        }
      },
      "cluster-tiers": {
        "title": "tiers",
        "type": "object",
        "description": "Object Storage Tier information.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Object Storage Tier ID."
          },
          "bw_gb_price": {
            "type": "float",
            "description": "Price per additional gigabyte of bandwidth."
          },
          "disk_gb_price": {
            "type": "float",
            "description": "Price per additional gigabyte of capacity."
          },
          "is_default": {
            "type": "string",
            "description": "Is this tier the default?"
          },
          "price": {
            "type": "float",
            "description": "Monthly price for this tier."
          },
          "ratelimit_ops_bytes": {
            "type": "integer",
            "description": "Rate limit on the number of bytes per second."
          },
          "ratelimit_ops_secs": {
            "type": "integer",
            "description": "Rate limit on the number of operations per second."
          },
          "sales_desc": {
            "type": "string",
            "description": "Sales description."
          },
          "sales_name": {
            "type": "string",
            "description": "Sales name."
          },
          "slug": {
            "type": "string",
            "description": "Slug, unique name."
          }
        }
      },
      "region": {
        "title": "region",
        "type": "object",
        "x-tags": [
          "region"
        ],
        "description": "Region information.",
        "x-examples": {
          "example": {
            "id": "ewr",
            "city": "New Jersey",
            "country": "US",
            "continent": "North America",
            "options": [
              "ddos_protection",
              "load_balancers",
              "object_storage",
              "kubernetes",
              "block_storage"
            ]
          }
        },
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the Region."
          },
          "country": {
            "type": "string",
            "description": "The [two-letter country code](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) for this Region."
          },
          "options": {
            "type": "array",
            "description": "An array of product features available in this Region.",
            "items": {
              "type": "string"
            }
          },
          "continent": {
            "type": "string",
            "description": "The name of the continent for this Region."
          },
          "city": {
            "type": "string",
            "description": "The name of the city for this Region."
          }
        }
      },
      "baremetal-ipv4": {
        "title": "baremetal-ipv4",
        "type": "object",
        "x-tags": [
          "baremetal"
        ],
        "description": "Bare Metal IPv4 information.",
        "x-examples": {
          "ipv4 example": {
            "ip": "192.0.2.123",
            "netmask": "255.255.254.0",
            "gateway": "192.0.2.123",
            "type": "main_ip",
            "reverse": "192.0.2.123.vultr.com",
            "mac_address": "00:00:5e:00:53:5e"
          }
        },
        "properties": {
          "ip": {
            "type": "string",
            "description": "The IPv4 address."
          },
          "netmask": {
            "type": "string",
            "description": "The IPv4 netmask in dot-decimal notation."
          },
          "gateway": {
            "type": "string",
            "description": "The gateway IP address."
          },
          "type": {
            "type": "string",
            "description": "The type of IP address.\n\n* main_ip"
          },
          "reverse": {
            "type": "string",
            "description": "The reverse DNS information for this IP address."
          },
          "mac_address": {
            "type": "string",
            "description": "The MAC address associated with this IP address."
          }
        }
      },
      "baremetal-ipv6": {
        "title": "baremetal-ipv6",
        "type": "object",
        "x-tags": [
          "baremetal"
        ],
        "description": "Bare Metal IPv6 information.",
        "properties": {
          "ip": {
            "type": "string",
            "description": "A unique ID for the IPv6 address."
          },
          "network": {
            "type": "string",
            "description": "The IPv6 subnet."
          },
          "network_size": {
            "type": "integer",
            "description": "The IPv6 network size in bits."
          },
          "type": {
            "type": "string",
            "description": "The type of IP address.\n\n* main_ip"
          }
        }
      },
      "bandwidth": {
        "title": "bandwidth",
        "type": "object",
        "description": "Bandwidth information.",
        "x-examples": {},
        "x-tags": [
          "bandwidth"
        ],
        "properties": {
          "incoming_bytes": {
            "type": "integer",
            "description": "Total bytes received by this instance on the date (UTC) denoted by the object key."
          },
          "outgoing_bytes": {
            "description": "Total bytes sent by this instance on the date (UTC) denoted by the object key.",
            "type": "integer"
          }
        }
      },
      "instance": {
        "title": "instance",
        "type": "object",
        "x-tags": [
          "instances"
        ],
        "description": "Instance information.",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the VPS Instance."
          },
          "os": {
            "type": "string",
            "description": "The [Operating System name](#operation/list-os)."
          },
          "ram": {
            "type": "integer",
            "description": "The amount of RAM in MB."
          },
          "disk": {
            "type": "integer",
            "description": "The size of the disk in GB."
          },
          "main_ip": {
            "type": "string",
            "description": "The main IPv4 address."
          },
          "vcpu_count": {
            "type": "integer",
            "description": "Number of vCPUs."
          },
          "region": {
            "type": "string",
            "description": "The [Region id](#operation/list-regions) where the Instance is located."
          },
          "default_password": {
            "type": "string",
            "description": "The default password assigned at deployment. Only available for ten minutes after deployment."
          },
          "date_created": {
            "type": "string",
            "description": "The date this instance was created."
          },
          "status": {
            "type": "string",
            "description": "The current status.\n\n* active\n* pending\n* suspended\n* resizing"
          },
          "power_status": {
            "type": "string",
            "description": "The power-on status.\n\n* running\n* stopped"
          },
          "server_status": {
            "type": "string",
            "description": "The server health status.\n\n* none\n* locked\n* installingbooting\n* ok"
          },
          "allowed_bandwidth": {
            "type": "integer",
            "description": "Monthly bandwidth quota in GB."
          },
          "netmask_v4": {
            "type": "string",
            "description": "The IPv4 netmask in dot-decimal notation."
          },
          "gateway_v4": {
            "type": "string",
            "description": "The gateway IP address."
          },
          "v6_networks": {
            "type": "array",
            "description": "An array of IPv6 objects.",
            "items": {
              "type": "object",
              "description": "An IPv6 object.",
              "properties": {
                "network": {
                  "type": "string",
                  "description": "The IPv6 subnet."
                },
                "main_ip": {
                  "type": "string",
                  "description": "The main IPv6 network address."
                },
                "network_size": {
                  "description": "The IPv6 network size in bits.",
                  "type": "integer"
                }
              }
            }
          },
          "hostname": {
            "type": "string",
            "description": "The hostname for this instance."
          },
          "label": {
            "type": "string",
            "description": "The user-supplied label for this instance."
          },
          "tag": {
            "type": "string",
            "description": "Use `tags` instead. The user-supplied tag for this instance.",
            "deprecated": true
          },
          "internal_ip": {
            "type": "string",
            "description": "The internal IP used by this instance, if set. Only relevant when a VPC is attached."
          },
          "kvm": {
            "type": "string",
            "description": "HTTPS link to the Vultr noVNC Web Console."
          },
          "os_id": {
            "type": "integer",
            "description": "The [Operating System id](#operation/list-os) used by this instance."
          },
          "app_id": {
            "type": "integer",
            "description": "The [Application id](#operation/list-applications) used by this instance."
          },
          "image_id": {
            "type": "string",
            "description": "The [Application image_id](#operation/list-applications) used by this instance."
          },
          "snapshot_id": {
            "type": "string",
            "description": "The [Snapshot id](#operation/list-snapshots) used by this instance."
          },
          "firewall_group_id": {
            "type": "string",
            "description": "The [Firewall Group id](#operation/list-firewall-groups) linked to this Instance."
          },
          "features": {
            "type": "array",
            "description": "\"auto_backups\", \"ipv6\", \"ddos_protection\"",
            "items": {
              "type": "string"
            }
          },
          "plan": {
            "type": "string",
            "description": "A unique ID for the Plan."
          },
          "tags": {
            "type": "array",
            "description": "Tags to apply to the instance.",
            "items": {
              "type": "string"
            }
          },
          "user_scheme": {
            "type": "string",
            "description": "The user scheme.\n\n* root\n* limited"
          }
        }
      },
      "instance-get": {
        "title": "instance",
        "type": "object",
        "x-tags": [
          "instances"
        ],
        "description": "Instance information.",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the VPS Instance."
          },
          "os": {
            "type": "string",
            "description": "The [Operating System name](#operation/list-os)."
          },
          "ram": {
            "type": "integer",
            "description": "The amount of RAM in MB."
          },
          "disk": {
            "type": "integer",
            "description": "The size of the disk in GB."
          },
          "main_ip": {
            "type": "string",
            "description": "The main IPv4 address."
          },
          "vcpu_count": {
            "type": "integer",
            "description": "Number of vCPUs."
          },
          "region": {
            "type": "string",
            "description": "The [Region id](#operation/list-regions) where the Instance is located."
          },
          "default_password": {
            "type": "string",
            "description": "The default password assigned at deployment. Only available for ten minutes after deployment."
          },
          "date_created": {
            "type": "string",
            "description": "The date this instance was created."
          },
          "status": {
            "type": "string",
            "description": "The current status.\n\n* active\n* pending\n* suspended\n* resizing"
          },
          "power_status": {
            "type": "string",
            "description": "The power-on status.\n\n* running\n* stopped"
          },
          "server_status": {
            "type": "string",
            "description": "The server health status.\n\n* none\n* locked\n* installingbooting\n* ok"
          },
          "allowed_bandwidth": {
            "type": "integer",
            "description": "Monthly bandwidth quota in GB."
          },
          "netmask_v4": {
            "type": "string",
            "description": "The IPv4 netmask in dot-decimal notation."
          },
          "gateway_v4": {
            "type": "string",
            "description": "The gateway IP address."
          },
          "v6_networks": {
            "type": "array",
            "description": "An array of IPv6 objects.",
            "items": {
              "type": "object",
              "description": "An IPv6 object.",
              "properties": {
                "network": {
                  "type": "string",
                  "description": "The IPv6 subnet."
                },
                "main_ip": {
                  "type": "string",
                  "description": "The main IPv6 network address."
                },
                "network_size": {
                  "description": "The IPv6 network size in bits.",
                  "type": "integer"
                }
              }
            }
          },
          "hostname": {
            "type": "string",
            "description": "The hostname for this instance."
          },
          "label": {
            "type": "string",
            "description": "The user-supplied label for this instance."
          },
          "tag": {
            "type": "string",
            "description": "Use `tags` instead. The user-supplied tag for this instance.",
            "deprecated": true
          },
          "internal_ip": {
            "type": "string",
            "description": "The internal IP used by this instance, if set. Only relevant when a VPC is attached."
          },
          "vpcs": {
            "type": "array",
            "description": "List of VPC Networks to which the instance is attached.",
            "items": {
              "$ref": "#/components/schemas/attached-vpcs"
            }
          },
          "kvm": {
            "type": "string",
            "description": "HTTPS link to the Vultr noVNC Web Console."
          },
          "os_id": {
            "type": "integer",
            "description": "The [Operating System id](#operation/list-os) used by this instance."
          },
          "app_id": {
            "type": "integer",
            "description": "The [Application id](#operation/list-applications) used by this instance."
          },
          "image_id": {
            "type": "string",
            "description": "The [Application image_id](#operation/list-applications) used by this instance."
          },
          "snapshot_id": {
            "type": "string",
            "description": "The [Snapshot id](#operation/list-snapshots) used by this instance."
          },
          "firewall_group_id": {
            "type": "string",
            "description": "The [Firewall Group id](#operation/list-firewall-groups) linked to this Instance."
          },
          "features": {
            "type": "array",
            "description": "\"auto_backups\", \"ipv6\", \"ddos_protection\"",
            "items": {
              "type": "string"
            }
          },
          "plan": {
            "type": "string",
            "description": "A unique ID for the Plan."
          },
          "tags": {
            "type": "array",
            "description": "Tags to apply to the instance.",
            "items": {
              "type": "string"
            }
          },
          "user_scheme": {
            "type": "string",
            "description": "The user scheme.\n\n* root\n* limited"
          }
        }
      },
      "private-networks": {
        "title": "private-networks",
        "type": "object",
        "x-tags": [
          "private-networks"
        ],
        "description": "Private Network information.",
        "properties": {
          "id": {
            "type": "string",
            "description": "A unique ID for the Private Network."
          },
          "mac_address": {
            "type": "string",
            "description": "The assigned MAC address."
          },
          "ip_address": {
            "type": "string",
            "description": "The assigned IP address."
          }
        },
        "x-examples": {
          "example-1": {}
        },
        "deprecated": true
      },
      "backup-schedule": {
        "title": "backup-schedule",
        "type": "object",
        "x-tags": [
          "backup-schedule"
        ],
        "description": "Backup schedule information.",
        "properties": {
          "enabled": {
            "type": "boolean",
            "description": "Indicates if backup is enabled:\n\n* true\n* false"
          },
          "type": {
            "type": "string",
            "description": "Type of backup schedule:\n\n|   | Value | Description |\n| - | ------ | ------------- |\n|   | daily | Back up once per day at `hour`. |\n|   | weekly | Back up once per week on `dow` at `hour`. |\n|   | monthly | Back up each month at `dom` at `hour`. |\n|   | daily\\_alt\\_even | Back up on even dates at `hour`. |\n|   | daily\\_alt\\_odd | Back up on odd dates at `hour`. |"
          },
          "next_scheduled_time_utc": {
            "type": "string",
            "description": "Time of next backup run in UTC."
          },
          "hour": {
            "type": "integer",
            "description": "Scheduled hour of day in UTC."
          },
          "dow": {
            "description": "Day of week to run.\n\n|   | Value | Description |\n| - | ------ | ------------- |\n|   | 1 | Sunday |\n|   | 2 | Monday |\n|   | 3 | Tuesday |\n|   | 4 | Wednesday |\n|   | 5 | Thursday |\n|   | 6 | Friday |\n|   | 7 | Saturday |",
            "type": "integer"
          },
          "dom": {
            "description": "Day of month to run. Use values between 1 and 28.",
            "type": "integer"
          }
        }
      },
      "meta": {
        "title": "meta",
        "type": "object",
        "x-examples": {
          "meta response": {
            "meta": {
              "total": 31,
              "links": {
                "next": "WxYzExampleNext",
                "prev": ""
              }
            }
          }
        },
        "description": "The meta information object. See [Meta and Pagination](#section/Introduction/Meta-and-Pagination) for more information.",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Total objects available in the list. This value may be greater than the number of objects returned if `per_page` is set."
          },
          "links": {
            "type": "object",
            "description": "Cursor values for pagination.",
            "properties": {
              "next": {
                "type": "string",
                "description": "Cursor value for the next page."
              },
              "prev": {
                "type": "string",
                "description": "Cursor value for the previous page."
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "API Key": {
        "type": "http",
        "scheme": "bearer",
        "in": "header",
        "description": "The Vultr API v2 uses API keys for authentication. You can manage your API keys in the Vultr customer portal or within the Vultr API. Please do not share API keys publicly, or embed them in client-side code. It is a good security practice to restrict their use by IP address in the [customer portal](https://my.vultr.com/settings/#settingsapi).\n\nTo authenticate a request, send your API Key as a bearer token in the request header.\n\n### Authentication Example\n\n    curl \"https://api.vultr.com/v2/account\" \\\n      -X GET \\\n      -H \"Authorization: Bearer ${VULTR_API_KEY}\"\n\nUnauthenticated API requests will fail. All requests must use HTTPS encryption for security, and calls made with HTTP will fail."
      }
    }
  },
  "tags": [
    {
      "name": "account",
      "x-displayName": "Account",
      "description": "Read-only information about your [user account](https://my.vultr.com/settings/#settingsprofile) and [billing](https://my.vultr.com/billing/#billinghistory) information.\n"
    },
    {
      "name": "application",
      "x-displayName": "Applications",
      "description": "[One-Click](https://www.vultr.com/features/one-click-apps/) and [Marketplace](https://www.vultr.com/marketplace/) Applications are ready-to-run with minimal configuration. We have an extensive [documentation library](https://docs.vultr.com/category/apps/) for our Applications.\n<br><br>There are two types of Applications: `marketplace` and `one-click`. This is denoted by the `type` field in the Application object. Applications with `type` of `marketplace` can be deployed by using the `image_id` while Applications with `type` of `one-click` should use the `id`.\n"
    },
    {
      "name": "api-keys",
      "x-displayName": "API Keys",
      "description": "The Vultr API v2 uses API keys for authentication. These methods enable you to manage your API keys without having to access the customer portal. Keys are only accessible for the currently authenticated user. To manage keys for other users, see the \"Users\" section.\n"
    },
    {
      "name": "backup",
      "x-displayName": "Backups",
      "description": "A backup is a scheduled, automatic, point-in-time image of an instance. We do not stop the instance when taking a backup. Booting from a backup is similar to rebooting after a non-graceful restart. [Snapshots](#tag/snapshot) are physically the same as backups, but snapshots are manual while backups run automatically on a schedule. Backups can be converted into snapshots. See our [Automatic Backup FAQ](https://docs.vultr.com/vps-automatic-backups/) for more information.\n"
    },
    {
      "name": "baremetal",
      "x-displayName": "Bare Metal",
      "description": "[Bare Metal](https://www.vultr.com/products/bare-metal/) servers give you access to the underlying physical hardware in a single-tenant environment without a virtualization layer.\n"
    },
    {
      "name": "billing",
      "x-displayName": "Billing",
      "description": "Read-only [billing](https://my.vultr.com/billing/#billinghistory) information for your [user account](https://my.vultr.com/settings/#settingsprofile)."
    },
    {
      "name": "block",
      "x-displayName": "Block Storage",
      "description": "[Block Storage](https://www.vultr.com/products/block-storage/) volumes are highly-available, redundant, SSD backed, and expandable from 10 GB to 40,000 GB depending on the type. Block storage volumes can be formatted with your choice of filesystems and moved between server instances as needed. [See our FAQ](https://docs.vultr.com/block-storage/) for details.\n"
    },
    {
      "name": "CDNs",
      "x-displayName": "CDNs",
      "description": "A Vultr Content Delivery Network (CDN) optimizes your website, allowing you to deliver content quickly to users worldwide. More information on Vultr CDN can be found [here](https://docs.vultr.com/vultr-content-delivery-network).\n"
    },
    {
      "name": "Container Registry",
      "x-displayName": "Container Registry",
      "description": "Store and manage public and private container images for rapid deployment to Vultr Managed Kubernetes.\n"
    },
    {
      "name": "dns",
      "x-displayName": "DNS",
      "description": "Vultr offers [free DNS hosting](https://docs.vultr.com/introduction-to-vultr-dns/) for customers' domains. The nameservers are on an AnyCAST network and ensure fast DNS resolution. When you manage your DNS through the API, you can view the results [in your customer portal](https://my.vultr.com/dns/).\n"
    },
    {
      "name": "firewall",
      "x-displayName": "Firewall",
      "description": "Vultr offers a [web-based firewall](https://docs.vultr.com/vultr-firewall/) solution to protect one or more compute instances. [Firewall groups](https://my.vultr.com/firewall/) can manage multiple servers with a standard ruleset. You can control multiple groups with the API.\n"
    },
    {
      "name": "instances",
      "x-displayName": "Instances",
      "description": "Vultr [Cloud instances](https://www.vultr.com/products/cloud-compute/) can be [deployed](https://my.vultr.com/) with your preferred operating system or pre-installed application in seconds. [High Frequency Compute](https://www.vultr.com/products/high-frequency-compute/) instances are powered by high clock speed CPU's and NVMe local storage to power your most demanding applications. [Dedicated Cloud](https://www.vultr.com/products/dedicated-cloud/) instances have dedicated CPU, SSD drives, and RAM.\n<br>\n<br>\n<b>Note: </b>Do not use this endpoint to manage [Kubernetes](https://www.vultr.com/kubernetes/) cluster nodes as it may result in unintended issues and charges. Use the kubernetes [endpoint](https://www.vultr.com/api/#tag/kubernetes) instead.\n"
    },
    {
      "name": "iso",
      "x-displayName": "ISO",
      "description": "[Upload](https://www.vultr.com/features/upload-iso/) and boot instances from your ISO, or choose one from our [public ISO library](https://my.vultr.com/iso/public/). See our [ISO documentation](https://docs.vultr.com/requirements-for-uploading-an-os-iso-to-vultr/).\n"
    },
    {
      "name": "kubernetes",
      "x-displayName": "Kubernetes",
      "description": "Vultr Kubernetes Engine is a managed Kubernetes offering."
    },
    {
      "name": "load-balancer",
      "x-displayName": "Load Balancers",
      "description": "[Load Balancers](https://docs.vultr.com/vultr-load-balancers/) sit in front of your application and distribute incoming traffic across multiple Instances. When you control the load balancer via the API, you can inspect the results in the [customer portal](https://my.vultr.com/loadbalancers/).\n"
    },
    {
      "name": "logs",
      "x-displayName": "Logs",
      "description": "[Logs](https://docs.vultr.com/vultr-logs/) record activity of users on your account.  Events that are logged include user logins, interactions with the my.vultr.com web portal, and requests to the api.vultr.com REST API.\n"
    },
    {
      "name": "managed-databases",
      "x-displayName": "Managed Databases",
      "description": "[Vultr Managed Databases](https://docs.vultr.com/vultr-managed-databases/) is a managed database offering supporting MySQL, PostgreSQL, Valkey, and Apache Kafka®.\n"
    },
    {
      "name": "marketplace",
      "x-displayName": "Marketplace",
      "description": "[Vultr Marketplace](https://docs.vultr.com/vultr-marketplace) is a platform for vendors to publish custom applications on Vultr's infrastructure.\n"
    },
    {
      "name": "s3",
      "x-displayName": "Object Storage",
      "description": "[Object Storage](https://docs.vultr.com/vultr-object-storage/) is S3 API compatible. Objects uploaded to object storage can be accessed privately or publicly on the web. Object storage supports a virtually unlimited number of objects. Control your Object Storage via the API or browse in the [Customer Portal](https://my.vultr.com/objectstorage/).\n"
    },
    {
      "name": "os",
      "x-displayName": "Operating Systems",
      "description": "We have a wide range of [operating systems](https://www.vultr.com/features/operating-systems/) available to deploy server instances. You can also [upload an ISO](#tag/iso) or choose from our public ISO library.\n"
    },
    {
      "name": "plans",
      "x-displayName": "Plans",
      "description": "A Plan is a particular configuration of vCPU, RAM, SSD, and bandwidth to deploy an [Instance](#tag/instances). Not all Plans are available in all [Regions](#tag/region). You can browse plans in the [Customer Portal](https://my.vultr.com/deploy/) or get a list of Plans from the API.\n"
    },
    {
      "name": "private Networks",
      "x-displayName": "Private Networks",
      "description": "**Deprecated**: use [VPCs](#tag/VPCs) instead.<br><br>[Private Networks](https://docs.vultr.com/configuring-private-network/) are fully isolated networks accessible only by instances on your account. Each private network is only available in one Region and cannot span across regions. An [instance](#tag/instances) can connect to [multiple private networks](https://docs.vultr.com/multiple-private-networks/) and you may have up to 5 private networks per [region](#tag/region).\n"
    },
    {
      "name": "serverless-inference",
      "x-displayName": "Serverless Inference",
      "description": "[Vultr Serverless Inference](https://www.vultr.com/products/cloud-inference/) intelligently deploys and serves GenAI models without the complexity of infrastructure management.\n"
    },
    {
      "name": "VPCs",
      "x-displayName": "VPCs",
      "description": "[VPCs](https://docs.vultr.com/how-to-create-a-vultr-virtual-private-cloud-vpc/) are fully isolated networks accessible only by instances on your account. Each VPC is only available in one region and cannot span across regions. An [instance](#tag/instances) can connect to multiple VPCs and you may have up to 5 VPCs per [region](#tag/region).\n"
    },
    {
      "name": "VPC2",
      "x-displayName": "VPC 2.0",
      "description": "**Deprecated**: Use [VPCs](#tag/VPCs) instead.<br><br>[VPC 2.0s](https://docs.vultr.com/how-to-create-a-vultr-virtual-private-cloud-vpc/) are fully isolated networks accessible only by instances on your account. Each VPC is only available in one region and cannot span across regions. An [instance](#tag/instances) can connect to multiple VPCs and you may have up to 5 VPCs per [region](#tag/region).\n"
    },
    {
      "name": "reserved-ip",
      "x-displayName": "Reserved IPs",
      "description": "IP addresses can be [reserved](https://my.vultr.com/network/) and moved between [instances](#tag/instances). Reserved IPs can also be used as [floating addresses](https://docs.vultr.com/high-availability-on-vultr-with-floating-ip-and-bgp/) for high-availability.\n"
    },
    {
      "name": "region",
      "x-displayName": "Regions",
      "description": "Instances can be deployed in many [Regions](https://www.vultr.com/features/datacenter-locations/) on multiple continents. Choose any of our worldwide locations to deploy servers near your office or customers for low-latency."
    },
    {
      "name": "snapshot",
      "x-displayName": "Snapshots",
      "description": "A snapshot is a point-in-time image of an instance. We do not stop the instance when taking a snapshot. Booting from a snapshot is similar to rebooting after a non-graceful restart. Snapshots are physically the same as [backups](#tag/backup), but snapshots are manual while backups run automatically on a schedule. See our [Snapshot Quickstart Guide](https://docs.vultr.com/vultr-vps-snapshots/) for more information.\n"
    },
    {
      "name": "subaccount",
      "x-displayName": "Sub-Accounts",
      "description": "Sub-accounts are separate Vultr accounts that are directly linked to your account. These accounts function similarly to normal Vultr accounts with some additional billing and administrative features available to your account.\n"
    },
    {
      "name": "ssh",
      "x-displayName": "SSH Keys",
      "description": "You can add [SSH keys](https://docs.vultr.com/how-do-i-generate-ssh-keys/) to your [account](https://my.vultr.com/settings/#settingssshkeys/), which can be copied to new instances when first deployed. Updating a key does not update any running instances. If you [reinstall](#operation/reinstall-instance) an instance (erasing all its data), it will inherit the updated key."
    },
    {
      "name": "startup",
      "x-displayName": "Startup Scripts",
      "description": "Vultr allows you to assign [two types of scripts to a server](https://docs.vultr.com/vultr-startup-scripts-quickstart-guide/). Boot scripts configure new deployments, and PXE scripts automatically install operating systems. Assign startup scripts to your servers through the API or on your [Startup Scripts page](https://my.vultr.com/startup/) in the customer portal.\n<br>\n<br>\n**Note**: There is a size limit of 64KB on the startup script.\n"
    },
    {
      "name": "storage-gateways",
      "x-displayName": "Storage Gateways",
      "description": "[Storage Gateways](https://docs.vultr.com/products/cloud-storage/storage-gateway/provisioning) allow access to Vultr File System via the NFS v4.2 protocol. Each SG is only available in one region and cannot span across regions. An SG may be configured with a public IPv4/IPv6 for access over WAN and/or attached to a VPC Network.\n"
    },
    {
      "name": "users",
      "x-displayName": "Users",
      "description": "Vultr supports [multiple users](https://my.vultr.com/settings/#settingsusers) in each account, and each user has [individual access permissions](https://my.vultr.com/users/manage/?USERID=new). Users have unique API keys, which respect the permission for that user."
    }
  ],
  "security": [
    {
      "API Key": []
    }
  ]
}